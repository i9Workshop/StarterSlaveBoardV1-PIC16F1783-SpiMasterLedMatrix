

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Nov 22 15:51:51 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F1783
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 07/09/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F1783 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0008                     bsr             equ	8
    57     0005                     fsr0h           equ	5
    58     0004                     fsr0l           equ	4
    59     0007                     fsr1h           equ	7
    60     0006                     fsr1l           equ	6
    61     0000                     indf            equ	0
    62     0000                     indf0           equ	0
    63     0001                     indf1           equ	1
    64     000B                     intcon          equ	11
    65     0002                     pc              equ	2
    66     0002                     pcl             equ	2
    67     000A                     pclath          equ	10
    68     0003                     status          equ	3
    69     0009                     wreg            equ	9
    70     0000                     INDF0           equ	0	;# 
    71     0001                     INDF1           equ	1	;# 
    72     0002                     PCL             equ	2	;# 
    73     0003                     STATUS          equ	3	;# 
    74     0004                     FSR0L           equ	4	;# 
    75     0005                     FSR0H           equ	5	;# 
    76     0006                     FSR1L           equ	6	;# 
    77     0007                     FSR1H           equ	7	;# 
    78     0008                     BSR             equ	8	;# 
    79     0009                     WREG            equ	9	;# 
    80     000A                     PCLATH          equ	10	;# 
    81     000B                     INTCON          equ	11	;# 
    82     000C                     PORTA           equ	12	;# 
    83     000D                     PORTB           equ	13	;# 
    84     000E                     PORTC           equ	14	;# 
    85     0010                     PORTE           equ	16	;# 
    86     0011                     PIR1            equ	17	;# 
    87     0012                     PIR2            equ	18	;# 
    88     0014                     PIR4            equ	20	;# 
    89     0015                     TMR0            equ	21	;# 
    90     0016                     TMR1            equ	22	;# 
    91     0016                     TMR1L           equ	22	;# 
    92     0017                     TMR1H           equ	23	;# 
    93     0018                     T1CON           equ	24	;# 
    94     0019                     T1GCON          equ	25	;# 
    95     001A                     TMR2            equ	26	;# 
    96     001B                     PR2             equ	27	;# 
    97     001C                     T2CON           equ	28	;# 
    98     008C                     TRISA           equ	140	;# 
    99     008D                     TRISB           equ	141	;# 
   100     008E                     TRISC           equ	142	;# 
   101     0090                     TRISE           equ	144	;# 
   102     0091                     PIE1            equ	145	;# 
   103     0092                     PIE2            equ	146	;# 
   104     0094                     PIE4            equ	148	;# 
   105     0095                     OPTION_REG      equ	149	;# 
   106     0096                     PCON            equ	150	;# 
   107     0097                     WDTCON          equ	151	;# 
   108     0098                     OSCTUNE         equ	152	;# 
   109     0099                     OSCCON          equ	153	;# 
   110     009A                     OSCSTAT         equ	154	;# 
   111     009B                     ADRES           equ	155	;# 
   112     009B                     ADRESL          equ	155	;# 
   113     009C                     ADRESH          equ	156	;# 
   114     009D                     ADCON0          equ	157	;# 
   115     009E                     ADCON1          equ	158	;# 
   116     009F                     ADCON2          equ	159	;# 
   117     010C                     LATA            equ	268	;# 
   118     010D                     LATB            equ	269	;# 
   119     010E                     LATC            equ	270	;# 
   120     0111                     CM1CON0         equ	273	;# 
   121     0112                     CM1CON1         equ	274	;# 
   122     0113                     CM2CON0         equ	275	;# 
   123     0114                     CM2CON1         equ	276	;# 
   124     0115                     CMOUT           equ	277	;# 
   125     0116                     BORCON          equ	278	;# 
   126     0117                     FVRCON          equ	279	;# 
   127     0118                     DACCON0         equ	280	;# 
   128     0119                     DACCON1         equ	281	;# 
   129     011D                     APFCON          equ	285	;# 
   130     011D                     APFCON0         equ	285	;# 
   131     011E                     CM3CON0         equ	286	;# 
   132     011F                     CM3CON1         equ	287	;# 
   133     018C                     ANSELA          equ	396	;# 
   134     018D                     ANSELB          equ	397	;# 
   135     0191                     EEADR           equ	401	;# 
   136     0191                     EEADRL          equ	401	;# 
   137     0192                     EEADRH          equ	402	;# 
   138     0193                     EEDAT           equ	403	;# 
   139     0193                     EEDATL          equ	403	;# 
   140     0193                     EEDATA          equ	403	;# 
   141     0194                     EEDATH          equ	404	;# 
   142     0195                     EECON1          equ	405	;# 
   143     0196                     EECON2          equ	406	;# 
   144     0197                     VREGCON         equ	407	;# 
   145     0199                     RC1REG          equ	409	;# 
   146     0199                     RCREG           equ	409	;# 
   147     0199                     RCREG1          equ	409	;# 
   148     019A                     TX1REG          equ	410	;# 
   149     019A                     TXREG1          equ	410	;# 
   150     019A                     TXREG           equ	410	;# 
   151     019B                     SP1BRG          equ	411	;# 
   152     019B                     SPBRG           equ	411	;# 
   153     019B                     SP1BRGL         equ	411	;# 
   154     019B                     SPBRG1          equ	411	;# 
   155     019B                     SPBRGL          equ	411	;# 
   156     019C                     SP1BRGH         equ	412	;# 
   157     019C                     SPBRGH          equ	412	;# 
   158     019C                     SPBRGH1         equ	412	;# 
   159     019D                     RC1STA          equ	413	;# 
   160     019D                     RCSTA1          equ	413	;# 
   161     019D                     RCSTA           equ	413	;# 
   162     019E                     TX1STA          equ	414	;# 
   163     019E                     TXSTA1          equ	414	;# 
   164     019E                     TXSTA           equ	414	;# 
   165     019F                     BAUD1CON        equ	415	;# 
   166     019F                     BAUDCON1        equ	415	;# 
   167     019F                     BAUDCTL1        equ	415	;# 
   168     019F                     BAUDCON         equ	415	;# 
   169     019F                     BAUDCTL         equ	415	;# 
   170     020C                     WPUA            equ	524	;# 
   171     020D                     WPUB            equ	525	;# 
   172     020E                     WPUC            equ	526	;# 
   173     0210                     WPUE            equ	528	;# 
   174     0211                     SSPBUF          equ	529	;# 
   175     0211                     SSP1BUF         equ	529	;# 
   176     0212                     SSPADD          equ	530	;# 
   177     0212                     SSP1ADD         equ	530	;# 
   178     0213                     SSPMSK          equ	531	;# 
   179     0213                     SSP1MSK         equ	531	;# 
   180     0214                     SSPSTAT         equ	532	;# 
   181     0214                     SSP1STAT        equ	532	;# 
   182     0215                     SSPCON1         equ	533	;# 
   183     0215                     SSP1CON         equ	533	;# 
   184     0215                     SSPCON          equ	533	;# 
   185     0216                     SSPCON2         equ	534	;# 
   186     0216                     SSP1CON2        equ	534	;# 
   187     0217                     SSPCON3         equ	535	;# 
   188     0217                     SSP1CON3        equ	535	;# 
   189     028C                     ODCONA          equ	652	;# 
   190     028D                     ODCONB          equ	653	;# 
   191     028E                     ODCONC          equ	654	;# 
   192     0291                     CCPR1           equ	657	;# 
   193     0291                     CCPR1L          equ	657	;# 
   194     0292                     CCPR1H          equ	658	;# 
   195     0293                     CCP1CON         equ	659	;# 
   196     0298                     CCPR2           equ	664	;# 
   197     0298                     CCPR2L          equ	664	;# 
   198     0299                     CCPR2H          equ	665	;# 
   199     029A                     CCP2CON         equ	666	;# 
   200     030C                     SLRCONA         equ	780	;# 
   201     030D                     SLRCONB         equ	781	;# 
   202     030E                     SLRCONC         equ	782	;# 
   203     038C                     INLVLA          equ	908	;# 
   204     038D                     INLVLB          equ	909	;# 
   205     038E                     INLVLC          equ	910	;# 
   206     0390                     INLVLE          equ	912	;# 
   207     0391                     IOCAP           equ	913	;# 
   208     0392                     IOCAN           equ	914	;# 
   209     0393                     IOCAF           equ	915	;# 
   210     0394                     IOCBP           equ	916	;# 
   211     0395                     IOCBN           equ	917	;# 
   212     0396                     IOCBF           equ	918	;# 
   213     0397                     IOCCP           equ	919	;# 
   214     0398                     IOCCN           equ	920	;# 
   215     0399                     IOCCF           equ	921	;# 
   216     039D                     IOCEP           equ	925	;# 
   217     039E                     IOCEN           equ	926	;# 
   218     039F                     IOCEF           equ	927	;# 
   219     0511                     OPA1CON         equ	1297	;# 
   220     0513                     OPA2CON         equ	1299	;# 
   221     051A                     CLKRCON         equ	1306	;# 
   222     0811                     PSMC1CON        equ	2065	;# 
   223     0812                     PSMC1MDL        equ	2066	;# 
   224     0813                     PSMC1SYNC       equ	2067	;# 
   225     0814                     PSMC1CLK        equ	2068	;# 
   226     0815                     PSMC1OEN        equ	2069	;# 
   227     0816                     PSMC1POL        equ	2070	;# 
   228     0817                     PSMC1BLNK       equ	2071	;# 
   229     0818                     PSMC1REBS       equ	2072	;# 
   230     0819                     PSMC1FEBS       equ	2073	;# 
   231     081A                     PSMC1PHS        equ	2074	;# 
   232     081B                     PSMC1DCS        equ	2075	;# 
   233     081C                     PSMC1PRS        equ	2076	;# 
   234     081D                     PSMC1ASDC       equ	2077	;# 
   235     081E                     PSMC1ASDL       equ	2078	;# 
   236     081F                     PSMC1ASDS       equ	2079	;# 
   237     0820                     PSMC1INT        equ	2080	;# 
   238     0821                     PSMC1PH         equ	2081	;# 
   239     0821                     PSMC1PHL        equ	2081	;# 
   240     0822                     PSMC1PHH        equ	2082	;# 
   241     0823                     PSMC1DC         equ	2083	;# 
   242     0823                     PSMC1DCL        equ	2083	;# 
   243     0824                     PSMC1DCH        equ	2084	;# 
   244     0825                     PSMC1PR         equ	2085	;# 
   245     0825                     PSMC1PRL        equ	2085	;# 
   246     0826                     PSMC1PRH        equ	2086	;# 
   247     0827                     PSMC1TMR        equ	2087	;# 
   248     0827                     PSMC1TMRL       equ	2087	;# 
   249     0828                     PSMC1TMRH       equ	2088	;# 
   250     0829                     PSMC1DBR        equ	2089	;# 
   251     082A                     PSMC1DBF        equ	2090	;# 
   252     082B                     PSMC1BLKR       equ	2091	;# 
   253     082C                     PSMC1BLKF       equ	2092	;# 
   254     082D                     PSMC1FFA        equ	2093	;# 
   255     082E                     PSMC1STR0       equ	2094	;# 
   256     082F                     PSMC1STR1       equ	2095	;# 
   257     0831                     PSMC2CON        equ	2097	;# 
   258     0832                     PSMC2MDL        equ	2098	;# 
   259     0833                     PSMC2SYNC       equ	2099	;# 
   260     0834                     PSMC2CLK        equ	2100	;# 
   261     0835                     PSMC2OEN        equ	2101	;# 
   262     0836                     PSMC2POL        equ	2102	;# 
   263     0837                     PSMC2BLNK       equ	2103	;# 
   264     0838                     PSMC2REBS       equ	2104	;# 
   265     0839                     PSMC2FEBS       equ	2105	;# 
   266     083A                     PSMC2PHS        equ	2106	;# 
   267     083B                     PSMC2DCS        equ	2107	;# 
   268     083C                     PSMC2PRS        equ	2108	;# 
   269     083D                     PSMC2ASDC       equ	2109	;# 
   270     083E                     PSMC2ASDL       equ	2110	;# 
   271     083F                     PSMC2ASDS       equ	2111	;# 
   272     0840                     PSMC2INT        equ	2112	;# 
   273     0841                     PSMC2PH         equ	2113	;# 
   274     0841                     PSMC2PHL        equ	2113	;# 
   275     0842                     PSMC2PHH        equ	2114	;# 
   276     0843                     PSMC2DC         equ	2115	;# 
   277     0843                     PSMC2DCL        equ	2115	;# 
   278     0844                     PSMC2DCH        equ	2116	;# 
   279     0845                     PSMC2PR         equ	2117	;# 
   280     0845                     PSMC2PRL        equ	2117	;# 
   281     0846                     PSMC2PRH        equ	2118	;# 
   282     0847                     PSMC2TMR        equ	2119	;# 
   283     0847                     PSMC2TMRL       equ	2119	;# 
   284     0848                     PSMC2TMRH       equ	2120	;# 
   285     0849                     PSMC2DBR        equ	2121	;# 
   286     084A                     PSMC2DBF        equ	2122	;# 
   287     084B                     PSMC2BLKR       equ	2123	;# 
   288     084C                     PSMC2BLKF       equ	2124	;# 
   289     084D                     PSMC2FFA        equ	2125	;# 
   290     084E                     PSMC2STR0       equ	2126	;# 
   291     084F                     PSMC2STR1       equ	2127	;# 
   292     0FE4                     STATUS_SHAD     equ	4068	;# 
   293     0FE5                     WREG_SHAD       equ	4069	;# 
   294     0FE6                     BSR_SHAD        equ	4070	;# 
   295     0FE7                     PCLATH_SHAD     equ	4071	;# 
   296     0FE8                     FSR0L_SHAD      equ	4072	;# 
   297     0FE9                     FSR0H_SHAD      equ	4073	;# 
   298     0FEA                     FSR1L_SHAD      equ	4074	;# 
   299     0FEB                     FSR1H_SHAD      equ	4075	;# 
   300     0FED                     STKPTR          equ	4077	;# 
   301     0FEE                     TOSL            equ	4078	;# 
   302     0FEF                     TOSH            equ	4079	;# 
   303     0000                     INDF0           equ	0	;# 
   304     0001                     INDF1           equ	1	;# 
   305     0002                     PCL             equ	2	;# 
   306     0003                     STATUS          equ	3	;# 
   307     0004                     FSR0L           equ	4	;# 
   308     0005                     FSR0H           equ	5	;# 
   309     0006                     FSR1L           equ	6	;# 
   310     0007                     FSR1H           equ	7	;# 
   311     0008                     BSR             equ	8	;# 
   312     0009                     WREG            equ	9	;# 
   313     000A                     PCLATH          equ	10	;# 
   314     000B                     INTCON          equ	11	;# 
   315     000C                     PORTA           equ	12	;# 
   316     000D                     PORTB           equ	13	;# 
   317     000E                     PORTC           equ	14	;# 
   318     0010                     PORTE           equ	16	;# 
   319     0011                     PIR1            equ	17	;# 
   320     0012                     PIR2            equ	18	;# 
   321     0014                     PIR4            equ	20	;# 
   322     0015                     TMR0            equ	21	;# 
   323     0016                     TMR1            equ	22	;# 
   324     0016                     TMR1L           equ	22	;# 
   325     0017                     TMR1H           equ	23	;# 
   326     0018                     T1CON           equ	24	;# 
   327     0019                     T1GCON          equ	25	;# 
   328     001A                     TMR2            equ	26	;# 
   329     001B                     PR2             equ	27	;# 
   330     001C                     T2CON           equ	28	;# 
   331     008C                     TRISA           equ	140	;# 
   332     008D                     TRISB           equ	141	;# 
   333     008E                     TRISC           equ	142	;# 
   334     0090                     TRISE           equ	144	;# 
   335     0091                     PIE1            equ	145	;# 
   336     0092                     PIE2            equ	146	;# 
   337     0094                     PIE4            equ	148	;# 
   338     0095                     OPTION_REG      equ	149	;# 
   339     0096                     PCON            equ	150	;# 
   340     0097                     WDTCON          equ	151	;# 
   341     0098                     OSCTUNE         equ	152	;# 
   342     0099                     OSCCON          equ	153	;# 
   343     009A                     OSCSTAT         equ	154	;# 
   344     009B                     ADRES           equ	155	;# 
   345     009B                     ADRESL          equ	155	;# 
   346     009C                     ADRESH          equ	156	;# 
   347     009D                     ADCON0          equ	157	;# 
   348     009E                     ADCON1          equ	158	;# 
   349     009F                     ADCON2          equ	159	;# 
   350     010C                     LATA            equ	268	;# 
   351     010D                     LATB            equ	269	;# 
   352     010E                     LATC            equ	270	;# 
   353     0111                     CM1CON0         equ	273	;# 
   354     0112                     CM1CON1         equ	274	;# 
   355     0113                     CM2CON0         equ	275	;# 
   356     0114                     CM2CON1         equ	276	;# 
   357     0115                     CMOUT           equ	277	;# 
   358     0116                     BORCON          equ	278	;# 
   359     0117                     FVRCON          equ	279	;# 
   360     0118                     DACCON0         equ	280	;# 
   361     0119                     DACCON1         equ	281	;# 
   362     011D                     APFCON          equ	285	;# 
   363     011D                     APFCON0         equ	285	;# 
   364     011E                     CM3CON0         equ	286	;# 
   365     011F                     CM3CON1         equ	287	;# 
   366     018C                     ANSELA          equ	396	;# 
   367     018D                     ANSELB          equ	397	;# 
   368     0191                     EEADR           equ	401	;# 
   369     0191                     EEADRL          equ	401	;# 
   370     0192                     EEADRH          equ	402	;# 
   371     0193                     EEDAT           equ	403	;# 
   372     0193                     EEDATL          equ	403	;# 
   373     0193                     EEDATA          equ	403	;# 
   374     0194                     EEDATH          equ	404	;# 
   375     0195                     EECON1          equ	405	;# 
   376     0196                     EECON2          equ	406	;# 
   377     0197                     VREGCON         equ	407	;# 
   378     0199                     RC1REG          equ	409	;# 
   379     0199                     RCREG           equ	409	;# 
   380     0199                     RCREG1          equ	409	;# 
   381     019A                     TX1REG          equ	410	;# 
   382     019A                     TXREG1          equ	410	;# 
   383     019A                     TXREG           equ	410	;# 
   384     019B                     SP1BRG          equ	411	;# 
   385     019B                     SPBRG           equ	411	;# 
   386     019B                     SP1BRGL         equ	411	;# 
   387     019B                     SPBRG1          equ	411	;# 
   388     019B                     SPBRGL          equ	411	;# 
   389     019C                     SP1BRGH         equ	412	;# 
   390     019C                     SPBRGH          equ	412	;# 
   391     019C                     SPBRGH1         equ	412	;# 
   392     019D                     RC1STA          equ	413	;# 
   393     019D                     RCSTA1          equ	413	;# 
   394     019D                     RCSTA           equ	413	;# 
   395     019E                     TX1STA          equ	414	;# 
   396     019E                     TXSTA1          equ	414	;# 
   397     019E                     TXSTA           equ	414	;# 
   398     019F                     BAUD1CON        equ	415	;# 
   399     019F                     BAUDCON1        equ	415	;# 
   400     019F                     BAUDCTL1        equ	415	;# 
   401     019F                     BAUDCON         equ	415	;# 
   402     019F                     BAUDCTL         equ	415	;# 
   403     020C                     WPUA            equ	524	;# 
   404     020D                     WPUB            equ	525	;# 
   405     020E                     WPUC            equ	526	;# 
   406     0210                     WPUE            equ	528	;# 
   407     0211                     SSPBUF          equ	529	;# 
   408     0211                     SSP1BUF         equ	529	;# 
   409     0212                     SSPADD          equ	530	;# 
   410     0212                     SSP1ADD         equ	530	;# 
   411     0213                     SSPMSK          equ	531	;# 
   412     0213                     SSP1MSK         equ	531	;# 
   413     0214                     SSPSTAT         equ	532	;# 
   414     0214                     SSP1STAT        equ	532	;# 
   415     0215                     SSPCON1         equ	533	;# 
   416     0215                     SSP1CON         equ	533	;# 
   417     0215                     SSPCON          equ	533	;# 
   418     0216                     SSPCON2         equ	534	;# 
   419     0216                     SSP1CON2        equ	534	;# 
   420     0217                     SSPCON3         equ	535	;# 
   421     0217                     SSP1CON3        equ	535	;# 
   422     028C                     ODCONA          equ	652	;# 
   423     028D                     ODCONB          equ	653	;# 
   424     028E                     ODCONC          equ	654	;# 
   425     0291                     CCPR1           equ	657	;# 
   426     0291                     CCPR1L          equ	657	;# 
   427     0292                     CCPR1H          equ	658	;# 
   428     0293                     CCP1CON         equ	659	;# 
   429     0298                     CCPR2           equ	664	;# 
   430     0298                     CCPR2L          equ	664	;# 
   431     0299                     CCPR2H          equ	665	;# 
   432     029A                     CCP2CON         equ	666	;# 
   433     030C                     SLRCONA         equ	780	;# 
   434     030D                     SLRCONB         equ	781	;# 
   435     030E                     SLRCONC         equ	782	;# 
   436     038C                     INLVLA          equ	908	;# 
   437     038D                     INLVLB          equ	909	;# 
   438     038E                     INLVLC          equ	910	;# 
   439     0390                     INLVLE          equ	912	;# 
   440     0391                     IOCAP           equ	913	;# 
   441     0392                     IOCAN           equ	914	;# 
   442     0393                     IOCAF           equ	915	;# 
   443     0394                     IOCBP           equ	916	;# 
   444     0395                     IOCBN           equ	917	;# 
   445     0396                     IOCBF           equ	918	;# 
   446     0397                     IOCCP           equ	919	;# 
   447     0398                     IOCCN           equ	920	;# 
   448     0399                     IOCCF           equ	921	;# 
   449     039D                     IOCEP           equ	925	;# 
   450     039E                     IOCEN           equ	926	;# 
   451     039F                     IOCEF           equ	927	;# 
   452     0511                     OPA1CON         equ	1297	;# 
   453     0513                     OPA2CON         equ	1299	;# 
   454     051A                     CLKRCON         equ	1306	;# 
   455     0811                     PSMC1CON        equ	2065	;# 
   456     0812                     PSMC1MDL        equ	2066	;# 
   457     0813                     PSMC1SYNC       equ	2067	;# 
   458     0814                     PSMC1CLK        equ	2068	;# 
   459     0815                     PSMC1OEN        equ	2069	;# 
   460     0816                     PSMC1POL        equ	2070	;# 
   461     0817                     PSMC1BLNK       equ	2071	;# 
   462     0818                     PSMC1REBS       equ	2072	;# 
   463     0819                     PSMC1FEBS       equ	2073	;# 
   464     081A                     PSMC1PHS        equ	2074	;# 
   465     081B                     PSMC1DCS        equ	2075	;# 
   466     081C                     PSMC1PRS        equ	2076	;# 
   467     081D                     PSMC1ASDC       equ	2077	;# 
   468     081E                     PSMC1ASDL       equ	2078	;# 
   469     081F                     PSMC1ASDS       equ	2079	;# 
   470     0820                     PSMC1INT        equ	2080	;# 
   471     0821                     PSMC1PH         equ	2081	;# 
   472     0821                     PSMC1PHL        equ	2081	;# 
   473     0822                     PSMC1PHH        equ	2082	;# 
   474     0823                     PSMC1DC         equ	2083	;# 
   475     0823                     PSMC1DCL        equ	2083	;# 
   476     0824                     PSMC1DCH        equ	2084	;# 
   477     0825                     PSMC1PR         equ	2085	;# 
   478     0825                     PSMC1PRL        equ	2085	;# 
   479     0826                     PSMC1PRH        equ	2086	;# 
   480     0827                     PSMC1TMR        equ	2087	;# 
   481     0827                     PSMC1TMRL       equ	2087	;# 
   482     0828                     PSMC1TMRH       equ	2088	;# 
   483     0829                     PSMC1DBR        equ	2089	;# 
   484     082A                     PSMC1DBF        equ	2090	;# 
   485     082B                     PSMC1BLKR       equ	2091	;# 
   486     082C                     PSMC1BLKF       equ	2092	;# 
   487     082D                     PSMC1FFA        equ	2093	;# 
   488     082E                     PSMC1STR0       equ	2094	;# 
   489     082F                     PSMC1STR1       equ	2095	;# 
   490     0831                     PSMC2CON        equ	2097	;# 
   491     0832                     PSMC2MDL        equ	2098	;# 
   492     0833                     PSMC2SYNC       equ	2099	;# 
   493     0834                     PSMC2CLK        equ	2100	;# 
   494     0835                     PSMC2OEN        equ	2101	;# 
   495     0836                     PSMC2POL        equ	2102	;# 
   496     0837                     PSMC2BLNK       equ	2103	;# 
   497     0838                     PSMC2REBS       equ	2104	;# 
   498     0839                     PSMC2FEBS       equ	2105	;# 
   499     083A                     PSMC2PHS        equ	2106	;# 
   500     083B                     PSMC2DCS        equ	2107	;# 
   501     083C                     PSMC2PRS        equ	2108	;# 
   502     083D                     PSMC2ASDC       equ	2109	;# 
   503     083E                     PSMC2ASDL       equ	2110	;# 
   504     083F                     PSMC2ASDS       equ	2111	;# 
   505     0840                     PSMC2INT        equ	2112	;# 
   506     0841                     PSMC2PH         equ	2113	;# 
   507     0841                     PSMC2PHL        equ	2113	;# 
   508     0842                     PSMC2PHH        equ	2114	;# 
   509     0843                     PSMC2DC         equ	2115	;# 
   510     0843                     PSMC2DCL        equ	2115	;# 
   511     0844                     PSMC2DCH        equ	2116	;# 
   512     0845                     PSMC2PR         equ	2117	;# 
   513     0845                     PSMC2PRL        equ	2117	;# 
   514     0846                     PSMC2PRH        equ	2118	;# 
   515     0847                     PSMC2TMR        equ	2119	;# 
   516     0847                     PSMC2TMRL       equ	2119	;# 
   517     0848                     PSMC2TMRH       equ	2120	;# 
   518     0849                     PSMC2DBR        equ	2121	;# 
   519     084A                     PSMC2DBF        equ	2122	;# 
   520     084B                     PSMC2BLKR       equ	2123	;# 
   521     084C                     PSMC2BLKF       equ	2124	;# 
   522     084D                     PSMC2FFA        equ	2125	;# 
   523     084E                     PSMC2STR0       equ	2126	;# 
   524     084F                     PSMC2STR1       equ	2127	;# 
   525     0FE4                     STATUS_SHAD     equ	4068	;# 
   526     0FE5                     WREG_SHAD       equ	4069	;# 
   527     0FE6                     BSR_SHAD        equ	4070	;# 
   528     0FE7                     PCLATH_SHAD     equ	4071	;# 
   529     0FE8                     FSR0L_SHAD      equ	4072	;# 
   530     0FE9                     FSR0H_SHAD      equ	4073	;# 
   531     0FEA                     FSR1L_SHAD      equ	4074	;# 
   532     0FEB                     FSR1H_SHAD      equ	4075	;# 
   533     0FED                     STKPTR          equ	4077	;# 
   534     0FEE                     TOSL            equ	4078	;# 
   535     0FEF                     TOSH            equ	4079	;# 
   536     0000                     INDF0           equ	0	;# 
   537     0001                     INDF1           equ	1	;# 
   538     0002                     PCL             equ	2	;# 
   539     0003                     STATUS          equ	3	;# 
   540     0004                     FSR0L           equ	4	;# 
   541     0005                     FSR0H           equ	5	;# 
   542     0006                     FSR1L           equ	6	;# 
   543     0007                     FSR1H           equ	7	;# 
   544     0008                     BSR             equ	8	;# 
   545     0009                     WREG            equ	9	;# 
   546     000A                     PCLATH          equ	10	;# 
   547     000B                     INTCON          equ	11	;# 
   548     000C                     PORTA           equ	12	;# 
   549     000D                     PORTB           equ	13	;# 
   550     000E                     PORTC           equ	14	;# 
   551     0010                     PORTE           equ	16	;# 
   552     0011                     PIR1            equ	17	;# 
   553     0012                     PIR2            equ	18	;# 
   554     0014                     PIR4            equ	20	;# 
   555     0015                     TMR0            equ	21	;# 
   556     0016                     TMR1            equ	22	;# 
   557     0016                     TMR1L           equ	22	;# 
   558     0017                     TMR1H           equ	23	;# 
   559     0018                     T1CON           equ	24	;# 
   560     0019                     T1GCON          equ	25	;# 
   561     001A                     TMR2            equ	26	;# 
   562     001B                     PR2             equ	27	;# 
   563     001C                     T2CON           equ	28	;# 
   564     008C                     TRISA           equ	140	;# 
   565     008D                     TRISB           equ	141	;# 
   566     008E                     TRISC           equ	142	;# 
   567     0090                     TRISE           equ	144	;# 
   568     0091                     PIE1            equ	145	;# 
   569     0092                     PIE2            equ	146	;# 
   570     0094                     PIE4            equ	148	;# 
   571     0095                     OPTION_REG      equ	149	;# 
   572     0096                     PCON            equ	150	;# 
   573     0097                     WDTCON          equ	151	;# 
   574     0098                     OSCTUNE         equ	152	;# 
   575     0099                     OSCCON          equ	153	;# 
   576     009A                     OSCSTAT         equ	154	;# 
   577     009B                     ADRES           equ	155	;# 
   578     009B                     ADRESL          equ	155	;# 
   579     009C                     ADRESH          equ	156	;# 
   580     009D                     ADCON0          equ	157	;# 
   581     009E                     ADCON1          equ	158	;# 
   582     009F                     ADCON2          equ	159	;# 
   583     010C                     LATA            equ	268	;# 
   584     010D                     LATB            equ	269	;# 
   585     010E                     LATC            equ	270	;# 
   586     0111                     CM1CON0         equ	273	;# 
   587     0112                     CM1CON1         equ	274	;# 
   588     0113                     CM2CON0         equ	275	;# 
   589     0114                     CM2CON1         equ	276	;# 
   590     0115                     CMOUT           equ	277	;# 
   591     0116                     BORCON          equ	278	;# 
   592     0117                     FVRCON          equ	279	;# 
   593     0118                     DACCON0         equ	280	;# 
   594     0119                     DACCON1         equ	281	;# 
   595     011D                     APFCON          equ	285	;# 
   596     011D                     APFCON0         equ	285	;# 
   597     011E                     CM3CON0         equ	286	;# 
   598     011F                     CM3CON1         equ	287	;# 
   599     018C                     ANSELA          equ	396	;# 
   600     018D                     ANSELB          equ	397	;# 
   601     0191                     EEADR           equ	401	;# 
   602     0191                     EEADRL          equ	401	;# 
   603     0192                     EEADRH          equ	402	;# 
   604     0193                     EEDAT           equ	403	;# 
   605     0193                     EEDATL          equ	403	;# 
   606     0193                     EEDATA          equ	403	;# 
   607     0194                     EEDATH          equ	404	;# 
   608     0195                     EECON1          equ	405	;# 
   609     0196                     EECON2          equ	406	;# 
   610     0197                     VREGCON         equ	407	;# 
   611     0199                     RC1REG          equ	409	;# 
   612     0199                     RCREG           equ	409	;# 
   613     0199                     RCREG1          equ	409	;# 
   614     019A                     TX1REG          equ	410	;# 
   615     019A                     TXREG1          equ	410	;# 
   616     019A                     TXREG           equ	410	;# 
   617     019B                     SP1BRG          equ	411	;# 
   618     019B                     SPBRG           equ	411	;# 
   619     019B                     SP1BRGL         equ	411	;# 
   620     019B                     SPBRG1          equ	411	;# 
   621     019B                     SPBRGL          equ	411	;# 
   622     019C                     SP1BRGH         equ	412	;# 
   623     019C                     SPBRGH          equ	412	;# 
   624     019C                     SPBRGH1         equ	412	;# 
   625     019D                     RC1STA          equ	413	;# 
   626     019D                     RCSTA1          equ	413	;# 
   627     019D                     RCSTA           equ	413	;# 
   628     019E                     TX1STA          equ	414	;# 
   629     019E                     TXSTA1          equ	414	;# 
   630     019E                     TXSTA           equ	414	;# 
   631     019F                     BAUD1CON        equ	415	;# 
   632     019F                     BAUDCON1        equ	415	;# 
   633     019F                     BAUDCTL1        equ	415	;# 
   634     019F                     BAUDCON         equ	415	;# 
   635     019F                     BAUDCTL         equ	415	;# 
   636     020C                     WPUA            equ	524	;# 
   637     020D                     WPUB            equ	525	;# 
   638     020E                     WPUC            equ	526	;# 
   639     0210                     WPUE            equ	528	;# 
   640     0211                     SSPBUF          equ	529	;# 
   641     0211                     SSP1BUF         equ	529	;# 
   642     0212                     SSPADD          equ	530	;# 
   643     0212                     SSP1ADD         equ	530	;# 
   644     0213                     SSPMSK          equ	531	;# 
   645     0213                     SSP1MSK         equ	531	;# 
   646     0214                     SSPSTAT         equ	532	;# 
   647     0214                     SSP1STAT        equ	532	;# 
   648     0215                     SSPCON1         equ	533	;# 
   649     0215                     SSP1CON         equ	533	;# 
   650     0215                     SSPCON          equ	533	;# 
   651     0216                     SSPCON2         equ	534	;# 
   652     0216                     SSP1CON2        equ	534	;# 
   653     0217                     SSPCON3         equ	535	;# 
   654     0217                     SSP1CON3        equ	535	;# 
   655     028C                     ODCONA          equ	652	;# 
   656     028D                     ODCONB          equ	653	;# 
   657     028E                     ODCONC          equ	654	;# 
   658     0291                     CCPR1           equ	657	;# 
   659     0291                     CCPR1L          equ	657	;# 
   660     0292                     CCPR1H          equ	658	;# 
   661     0293                     CCP1CON         equ	659	;# 
   662     0298                     CCPR2           equ	664	;# 
   663     0298                     CCPR2L          equ	664	;# 
   664     0299                     CCPR2H          equ	665	;# 
   665     029A                     CCP2CON         equ	666	;# 
   666     030C                     SLRCONA         equ	780	;# 
   667     030D                     SLRCONB         equ	781	;# 
   668     030E                     SLRCONC         equ	782	;# 
   669     038C                     INLVLA          equ	908	;# 
   670     038D                     INLVLB          equ	909	;# 
   671     038E                     INLVLC          equ	910	;# 
   672     0390                     INLVLE          equ	912	;# 
   673     0391                     IOCAP           equ	913	;# 
   674     0392                     IOCAN           equ	914	;# 
   675     0393                     IOCAF           equ	915	;# 
   676     0394                     IOCBP           equ	916	;# 
   677     0395                     IOCBN           equ	917	;# 
   678     0396                     IOCBF           equ	918	;# 
   679     0397                     IOCCP           equ	919	;# 
   680     0398                     IOCCN           equ	920	;# 
   681     0399                     IOCCF           equ	921	;# 
   682     039D                     IOCEP           equ	925	;# 
   683     039E                     IOCEN           equ	926	;# 
   684     039F                     IOCEF           equ	927	;# 
   685     0511                     OPA1CON         equ	1297	;# 
   686     0513                     OPA2CON         equ	1299	;# 
   687     051A                     CLKRCON         equ	1306	;# 
   688     0811                     PSMC1CON        equ	2065	;# 
   689     0812                     PSMC1MDL        equ	2066	;# 
   690     0813                     PSMC1SYNC       equ	2067	;# 
   691     0814                     PSMC1CLK        equ	2068	;# 
   692     0815                     PSMC1OEN        equ	2069	;# 
   693     0816                     PSMC1POL        equ	2070	;# 
   694     0817                     PSMC1BLNK       equ	2071	;# 
   695     0818                     PSMC1REBS       equ	2072	;# 
   696     0819                     PSMC1FEBS       equ	2073	;# 
   697     081A                     PSMC1PHS        equ	2074	;# 
   698     081B                     PSMC1DCS        equ	2075	;# 
   699     081C                     PSMC1PRS        equ	2076	;# 
   700     081D                     PSMC1ASDC       equ	2077	;# 
   701     081E                     PSMC1ASDL       equ	2078	;# 
   702     081F                     PSMC1ASDS       equ	2079	;# 
   703     0820                     PSMC1INT        equ	2080	;# 
   704     0821                     PSMC1PH         equ	2081	;# 
   705     0821                     PSMC1PHL        equ	2081	;# 
   706     0822                     PSMC1PHH        equ	2082	;# 
   707     0823                     PSMC1DC         equ	2083	;# 
   708     0823                     PSMC1DCL        equ	2083	;# 
   709     0824                     PSMC1DCH        equ	2084	;# 
   710     0825                     PSMC1PR         equ	2085	;# 
   711     0825                     PSMC1PRL        equ	2085	;# 
   712     0826                     PSMC1PRH        equ	2086	;# 
   713     0827                     PSMC1TMR        equ	2087	;# 
   714     0827                     PSMC1TMRL       equ	2087	;# 
   715     0828                     PSMC1TMRH       equ	2088	;# 
   716     0829                     PSMC1DBR        equ	2089	;# 
   717     082A                     PSMC1DBF        equ	2090	;# 
   718     082B                     PSMC1BLKR       equ	2091	;# 
   719     082C                     PSMC1BLKF       equ	2092	;# 
   720     082D                     PSMC1FFA        equ	2093	;# 
   721     082E                     PSMC1STR0       equ	2094	;# 
   722     082F                     PSMC1STR1       equ	2095	;# 
   723     0831                     PSMC2CON        equ	2097	;# 
   724     0832                     PSMC2MDL        equ	2098	;# 
   725     0833                     PSMC2SYNC       equ	2099	;# 
   726     0834                     PSMC2CLK        equ	2100	;# 
   727     0835                     PSMC2OEN        equ	2101	;# 
   728     0836                     PSMC2POL        equ	2102	;# 
   729     0837                     PSMC2BLNK       equ	2103	;# 
   730     0838                     PSMC2REBS       equ	2104	;# 
   731     0839                     PSMC2FEBS       equ	2105	;# 
   732     083A                     PSMC2PHS        equ	2106	;# 
   733     083B                     PSMC2DCS        equ	2107	;# 
   734     083C                     PSMC2PRS        equ	2108	;# 
   735     083D                     PSMC2ASDC       equ	2109	;# 
   736     083E                     PSMC2ASDL       equ	2110	;# 
   737     083F                     PSMC2ASDS       equ	2111	;# 
   738     0840                     PSMC2INT        equ	2112	;# 
   739     0841                     PSMC2PH         equ	2113	;# 
   740     0841                     PSMC2PHL        equ	2113	;# 
   741     0842                     PSMC2PHH        equ	2114	;# 
   742     0843                     PSMC2DC         equ	2115	;# 
   743     0843                     PSMC2DCL        equ	2115	;# 
   744     0844                     PSMC2DCH        equ	2116	;# 
   745     0845                     PSMC2PR         equ	2117	;# 
   746     0845                     PSMC2PRL        equ	2117	;# 
   747     0846                     PSMC2PRH        equ	2118	;# 
   748     0847                     PSMC2TMR        equ	2119	;# 
   749     0847                     PSMC2TMRL       equ	2119	;# 
   750     0848                     PSMC2TMRH       equ	2120	;# 
   751     0849                     PSMC2DBR        equ	2121	;# 
   752     084A                     PSMC2DBF        equ	2122	;# 
   753     084B                     PSMC2BLKR       equ	2123	;# 
   754     084C                     PSMC2BLKF       equ	2124	;# 
   755     084D                     PSMC2FFA        equ	2125	;# 
   756     084E                     PSMC2STR0       equ	2126	;# 
   757     084F                     PSMC2STR1       equ	2127	;# 
   758     0FE4                     STATUS_SHAD     equ	4068	;# 
   759     0FE5                     WREG_SHAD       equ	4069	;# 
   760     0FE6                     BSR_SHAD        equ	4070	;# 
   761     0FE7                     PCLATH_SHAD     equ	4071	;# 
   762     0FE8                     FSR0L_SHAD      equ	4072	;# 
   763     0FE9                     FSR0H_SHAD      equ	4073	;# 
   764     0FEA                     FSR1L_SHAD      equ	4074	;# 
   765     0FEB                     FSR1H_SHAD      equ	4075	;# 
   766     0FED                     STKPTR          equ	4077	;# 
   767     0FEE                     TOSL            equ	4078	;# 
   768     0FEF                     TOSH            equ	4079	;# 
   769     0011                     _PIR1bits       set	17
   770     008E                     _TRISCbits      set	142
   771     008C                     _TRISA          set	140
   772     010C                     _LATAbits       set	268
   773     010E                     _LATCbits       set	270
   774     011D                     _APFCONbits     set	285
   775     010C                     _LATA           set	268
   776     018C                     _ANSELA         set	396
   777     0211                     _SSPBUF         set	529
   778     0212                     _SSPADD         set	530
   779     0215                     _SSPCON1bits    set	533
   780     0214                     _SSPSTATbits    set	532
   781                           
   782                           	psect	cinit
   783     07FB                     start_initialization:	
   784                           ; #config settings
   785                           
   786     07FB                     __initialization:
   787                           
   788                           ; Clear objects allocated to BANK0
   789     07FB  0020               	movlb	0	; select bank0
   790     07FC  01AA               	clrf	__pbssBANK0& (0+127)
   791     07FD                     end_of_initialization:	
   792                           ;End of C runtime variable initialization code
   793                           
   794     07FD                     __end_of__initialization:
   795     07FD  0020               	movlb	0
   796     07FE  3186  2E72         	ljmp	_main	;jump to C main() function
   797                           
   798                           	psect	bssBANK0
   799     002A                     __pbssBANK0:
   800     002A                     _counter:
   801     002A                     	ds	1
   802                           
   803                           	psect	cstackCOMMON
   804     0070                     __pcstackCOMMON:
   805     0070                     ?_delay_x1o5us:
   806     0070                     ?_programInitialize:	
   807                           ; 1 bytes @ 0x0
   808                           
   809     0070                     ?_programLoop:	
   810                           ; 1 bytes @ 0x0
   811                           
   812     0070                     ?_spi_TransferByteSlave1:	
   813                           ; 1 bytes @ 0x0
   814                           
   815     0070                     ?_main:	
   816                           ; 1 bytes @ 0x0
   817                           
   818     0070                     ?_ledMatrix_AllOff:	
   819                           ; 1 bytes @ 0x0
   820                           
   821     0070                     ?___lldiv:	
   822                           ; 1 bytes @ 0x0
   823                           
   824     0070                     delay_x1o5us@delay:	
   825                           ; 4 bytes @ 0x0
   826                           
   827     0070                     spi_TransferByteSlave1@data:	
   828                           ; 1 bytes @ 0x0
   829                           
   830     0070                     ___lldiv@divisor:	
   831                           ; 1 bytes @ 0x0
   832                           
   833     0070                     ??_delay_x1o5us:	
   834                           ; 4 bytes @ 0x0
   835                           
   836     0070                     ??_spi_TransferByteSlave1:	
   837                           ; 1 bytes @ 0x0
   838                           
   839     0070                     ??_ledMatrix_AllOff:	
   840                           ; 1 bytes @ 0x0
   841                           
   842                           
   843                           ; 1 bytes @ 0x0
   844     0070                     	ds	1
   845     0071                     delay_x1o5us@i:
   846     0071                     spi_TransferByteSlave1@rxData:	
   847                           ; 1 bytes @ 0x1
   848                           
   849                           
   850                           ; 1 bytes @ 0x1
   851     0071                     	ds	1
   852     0072                     ?_delay_x24o25us:
   853     0072                     delay_x24o25us@delay:	
   854                           ; 1 bytes @ 0x2
   855                           
   856                           
   857                           ; 2 bytes @ 0x2
   858     0072                     	ds	2
   859     0074                     delay_x24o25us@i:
   860     0074                     ___lldiv@dividend:	
   861                           ; 2 bytes @ 0x4
   862                           
   863     0074                     ??_delay_x24o25us:	
   864                           ; 4 bytes @ 0x4
   865                           
   866                           
   867                           ; 1 bytes @ 0x4
   868     0074                     	ds	2
   869     0076                     ?_delay_ms:
   870     0076                     ?_ledMatrix_SetDisplay:	
   871                           ; 1 bytes @ 0x6
   872                           
   873     0076                     ledMatrix_SetDisplay@ledWord:	
   874                           ; 1 bytes @ 0x6
   875                           
   876     0076                     delay_ms@delay:	
   877                           ; 2 bytes @ 0x6
   878                           
   879                           
   880                           ; 4 bytes @ 0x6
   881     0076                     	ds	2
   882     0078                     ___lldiv@quotient:
   883     0078                     ??_programLoop:	
   884                           ; 4 bytes @ 0x8
   885                           
   886     0078                     ??_ledMatrix_SetDisplay:	
   887                           ; 1 bytes @ 0x8
   888                           
   889     0078                     ??___lldiv:	
   890                           ; 1 bytes @ 0x8
   891                           
   892                           
   893                           ; 1 bytes @ 0x8
   894     0078                     	ds	2
   895     007A                     programLoop@dataReturn:
   896     007A                     delay_ms@i:	
   897                           ; 1 bytes @ 0xA
   898                           
   899     007A                     ??_delay_ms:	
   900                           ; 4 bytes @ 0xA
   901                           
   902                           
   903                           ; 1 bytes @ 0xA
   904     007A                     	ds	1
   905     007B                     programLoop@transferDoneFlag:
   906                           
   907                           ; 1 bytes @ 0xB
   908     007B                     	ds	1
   909     007C                     programLoop@i:
   910     007C                     ___lldiv@counter:	
   911                           ; 1 bytes @ 0xC
   912                           
   913                           
   914                           ; 1 bytes @ 0xC
   915     007C                     	ds	1
   916     007D                     ??_programInitialize:
   917                           
   918                           ; 1 bytes @ 0xD
   919     007D                     	ds	1
   920     007E                     ??_main:
   921                           
   922                           	psect	cstackBANK0
   923     0020                     __pcstackBANK0:	
   924                           ; 1 bytes @ 0xE
   925                           
   926     0020                     ?_spi_Initialize:
   927     0020                     spi_Initialize@fosc:	
   928                           ; 1 bytes @ 0x0
   929                           
   930                           
   931                           ; 4 bytes @ 0x0
   932     0020                     	ds	4
   933     0024                     spi_Initialize@baudrate:
   934                           
   935                           ; 2 bytes @ 0x4
   936     0024                     	ds	2
   937     0026                     ??_spi_Initialize:
   938                           
   939                           ; 1 bytes @ 0x6
   940     0026                     	ds	4
   941                           
   942                           	psect	maintext
   943     0672                     __pmaintext:	
   944 ;;
   945 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   946 ;;
   947 ;; *************** function _main *****************
   948 ;; Defined at:
   949 ;;		line 26 in file "main.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0, pclath, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : B1F/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   963 ;;      Params:         0       0       0       0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0
   966 ;;      Totals:         0       0       0       0       0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels required when called: 4
   969 ;; This function calls:
   970 ;;		_delay_ms
   971 ;;		_delay_x1o5us
   972 ;;		_programInitialize
   973 ;;		_programLoop
   974 ;; This function is called by:
   975 ;;		Startup code after reset
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979     0672                     _main:	
   980                           ;psect for function _main
   981                           
   982     0672                     l1025:	
   983                           ;incstack = 0
   984                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   985                           
   986                           
   987                           ;main.c: 27:     delay_ms(100);
   988     0672  3000               	movlw	0
   989     0673  00F9               	movwf	delay_ms@delay+3
   990     0674  3000               	movlw	0
   991     0675  00F8               	movwf	delay_ms@delay+2
   992     0676  3000               	movlw	0
   993     0677  00F7               	movwf	delay_ms@delay+1
   994     0678  3064               	movlw	100
   995     0679  00F6               	movwf	delay_ms@delay
   996     067A  3186  26D8  3186   	fcall	_delay_ms
   997                           
   998                           ;main.c: 28:     delay_x1o5us(86);
   999     067D  3056               	movlw	86
  1000     067E  3186  2637  3186   	fcall	_delay_x1o5us
  1001                           
  1002                           ;main.c: 30:     programInitialize();
  1003     0681  3186  268A  3186   	fcall	_programInitialize
  1004     0684                     l13:	
  1005                           ;main.c: 32:     while(1) {
  1006                           
  1007                           
  1008                           ;main.c: 33:         programLoop();
  1009     0684  3186  26B1  3186   	fcall	_programLoop
  1010     0687  2E84               	goto	l13
  1011     0688  3180  2802         	ljmp	start
  1012     068A                     __end_of_main:
  1013                           
  1014                           	psect	text1
  1015     06B1                     __ptext1:	
  1016 ;; *************** function _programLoop *****************
  1017 ;; Defined at:
  1018 ;;		line 47 in file "program.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  i               1   12[COMMON] unsigned char 
  1023 ;;  transferDone    1   11[COMMON] _Bool 
  1024 ;;  dataReturn      1   10[COMMON] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0, pclath, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1034 ;;      Params:         0       0       0       0       0       0       0       0
  1035 ;;      Locals:         3       0       0       0       0       0       0       0
  1036 ;;      Temps:          2       0       0       0       0       0       0       0
  1037 ;;      Totals:         5       0       0       0       0       0       0       0
  1038 ;;Total ram usage:        5 bytes
  1039 ;; Hardware stack levels used: 1
  1040 ;; Hardware stack levels required when called: 3
  1041 ;; This function calls:
  1042 ;;		_ledMatrix_SetDisplay
  1043 ;;		_spi_TransferByteSlave1
  1044 ;; This function is called by:
  1045 ;;		_main
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049     06B1                     _programLoop:	
  1050                           ;psect for function _programLoop
  1051                           
  1052     06B1                     l1005:	
  1053                           ;incstack = 0
  1054                           ; Regs used in _programLoop: [wreg+status,2+status,0+pclath+cstack]
  1055                           
  1056                           
  1057                           ;program.c: 48:     uint8_t i = 0;
  1058     06B1  01FC               	clrf	programLoop@i
  1059                           
  1060                           ;program.c: 49:     uint8_t dataReturn = 0;
  1061     06B2  01FA               	clrf	programLoop@dataReturn
  1062                           
  1063                           ;program.c: 50:     _Bool transferDoneFlag = 0;
  1064     06B3  01FB               	clrf	programLoop@transferDoneFlag
  1065                           
  1066                           ;program.c: 52:     for(i=0; i<50; i++) {
  1067     06B4  01FC               	clrf	programLoop@i
  1068     06B5                     l1011:
  1069                           
  1070                           ;program.c: 53:         if(!transferDoneFlag) {
  1071     06B5  087B               	movf	programLoop@transferDoneFlag,w
  1072     06B6  1D03               	btfss	3,2
  1073     06B7  2EB9               	goto	u651
  1074     06B8  2EBA               	goto	u650
  1075     06B9                     u651:
  1076     06B9  2EC5               	goto	l1019
  1077     06BA                     u650:
  1078     06BA                     l1013:
  1079                           
  1080                           ;program.c: 54:             dataReturn = spi_TransferByteSlave1(counter++);
  1081     06BA  0020               	movlb	0	; select bank0
  1082     06BB  082A               	movf	_counter,w
  1083     06BC  3186  265A  3186   	fcall	_spi_TransferByteSlave1
  1084     06BF  00FA               	movwf	programLoop@dataReturn
  1085     06C0                     l1015:
  1086     06C0  3001               	movlw	1
  1087     06C1  0020               	movlb	0	; select bank0
  1088     06C2  07AA               	addwf	_counter,f
  1089     06C3                     l1017:
  1090                           
  1091                           ;program.c: 55:             transferDoneFlag = 1;
  1092     06C3  3001               	movlw	1
  1093     06C4  00FB               	movwf	programLoop@transferDoneFlag
  1094     06C5                     l1019:
  1095                           
  1096                           ;program.c: 58:         ledMatrix_SetDisplay(dataReturn);
  1097     06C5  087A               	movf	programLoop@dataReturn,w
  1098     06C6  00F8               	movwf	??_programLoop
  1099     06C7  01F9               	clrf	??_programLoop+1
  1100     06C8  0878               	movf	??_programLoop,w
  1101     06C9  00F6               	movwf	ledMatrix_SetDisplay@ledWord
  1102     06CA  0879               	movf	??_programLoop+1,w
  1103     06CB  00F7               	movwf	ledMatrix_SetDisplay@ledWord+1
  1104     06CC  3187  278B  3186   	fcall	_ledMatrix_SetDisplay
  1105     06CF                     l1021:
  1106                           
  1107                           ;program.c: 59:     }
  1108     06CF  3001               	movlw	1
  1109     06D0  07FC               	addwf	programLoop@i,f
  1110     06D1                     l1023:
  1111     06D1  3032               	movlw	50
  1112     06D2  027C               	subwf	programLoop@i,w
  1113     06D3  1C03               	skipc
  1114     06D4  2ED6               	goto	u661
  1115     06D5  2ED7               	goto	u660
  1116     06D6                     u661:
  1117     06D6  2EB5               	goto	l1011
  1118     06D7                     u660:
  1119     06D7                     l77:
  1120     06D7  0008               	return
  1121     06D8                     __end_of_programLoop:
  1122                           
  1123                           	psect	text2
  1124     065A                     __ptext2:	
  1125 ;; *************** function _spi_TransferByteSlave1 *****************
  1126 ;; Defined at:
  1127 ;;		line 128 in file "program.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  data            1    wreg     unsigned char 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  data            1    0[COMMON] unsigned char 
  1132 ;;  rxData          1    1[COMMON] unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      unsigned char 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1142 ;;      Params:         0       0       0       0       0       0       0       0
  1143 ;;      Locals:         2       0       0       0       0       0       0       0
  1144 ;;      Temps:          0       0       0       0       0       0       0       0
  1145 ;;      Totals:         2       0       0       0       0       0       0       0
  1146 ;;Total ram usage:        2 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_programLoop
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155     065A                     _spi_TransferByteSlave1:	
  1156                           ;psect for function _spi_TransferByteSlave1
  1157                           
  1158                           
  1159                           ;incstack = 0
  1160                           ; Regs used in _spi_TransferByteSlave1: [wreg+status,2]
  1161                           ;spi_TransferByteSlave1@data stored from wreg
  1162     065A  00F0               	movwf	spi_TransferByteSlave1@data
  1163     065B                     l915:
  1164                           
  1165                           ;program.c: 131:     LATCbits.LATC2 = 0;
  1166     065B  0022               	movlb	2	; select bank2
  1167     065C  110E               	bcf	14,2	;volatile
  1168     065D                     l917:
  1169     065D                     l919:
  1170                           
  1171                           ;program.c: 135:     __nop();
  1172     065D  0000               	nop
  1173     065E                     l921:
  1174                           
  1175                           ;program.c: 137:     SSPBUF = data;
  1176     065E  0870               	movf	spi_TransferByteSlave1@data,w
  1177     065F  0024               	movlb	4	; select bank4
  1178     0660  0091               	movwf	17	;volatile
  1179     0661                     l89:	
  1180                           ;program.c: 139:     while(!PIR1bits.SSP1IF);
  1181                           
  1182     0661  0020               	movlb	0	; select bank0
  1183     0662  1D91               	btfss	17,3	;volatile
  1184     0663  2E65               	goto	u441
  1185     0664  2E66               	goto	u440
  1186     0665                     u441:
  1187     0665  2E61               	goto	l89
  1188     0666                     u440:
  1189     0666                     l91:
  1190                           
  1191                           ;program.c: 140:     PIR1bits.SSP1IF = 0;
  1192     0666  1191               	bcf	17,3	;volatile
  1193     0667                     l92:	
  1194                           ;program.c: 142:     while(!SSPSTATbits.BF);
  1195                           
  1196     0667  0024               	movlb	4	; select bank4
  1197     0668  1C14               	btfss	20,0	;volatile
  1198     0669  2E6B               	goto	u451
  1199     066A  2E6C               	goto	u450
  1200     066B                     u451:
  1201     066B  2E67               	goto	l92
  1202     066C                     u450:
  1203     066C                     l923:
  1204                           
  1205                           ;program.c: 144:     rxData = SSPBUF;
  1206     066C  0811               	movf	17,w	;volatile
  1207     066D  00F1               	movwf	spi_TransferByteSlave1@rxData
  1208     066E                     l925:
  1209                           
  1210                           ;program.c: 146:     LATCbits.LATC2 = 1;
  1211     066E  0022               	movlb	2	; select bank2
  1212     066F  150E               	bsf	14,2	;volatile
  1213                           
  1214                           ;program.c: 148:     return rxData;
  1215     0670  0871               	movf	spi_TransferByteSlave1@rxData,w
  1216     0671                     l95:
  1217     0671  0008               	return
  1218     0672                     __end_of_spi_TransferByteSlave1:
  1219                           
  1220                           	psect	text3
  1221     078B                     __ptext3:	
  1222 ;; *************** function _ledMatrix_SetDisplay *****************
  1223 ;; Defined at:
  1224 ;;		line 72 in file "program.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  ledWord         2    6[COMMON] unsigned short 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  delay           1    0        unsigned char 
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, status,2, status,0, pclath, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1238 ;;      Params:         2       0       0       0       0       0       0       0
  1239 ;;      Locals:         0       0       0       0       0       0       0       0
  1240 ;;      Temps:          0       0       0       0       0       0       0       0
  1241 ;;      Totals:         2       0       0       0       0       0       0       0
  1242 ;;Total ram usage:        2 bytes
  1243 ;; Hardware stack levels used: 1
  1244 ;; Hardware stack levels required when called: 2
  1245 ;; This function calls:
  1246 ;;		_delay_x24o25us
  1247 ;;		_ledMatrix_AllOff
  1248 ;; This function is called by:
  1249 ;;		_programLoop
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253     078B                     _ledMatrix_SetDisplay:	
  1254                           ;psect for function _ledMatrix_SetDisplay
  1255                           
  1256     078B                     l929:	
  1257                           ;incstack = 0
  1258                           ; Regs used in _ledMatrix_SetDisplay: [wreg+status,2+status,0+pclath+cstack]
  1259                           
  1260     078B                     l931:
  1261                           
  1262                           ;program.c: 77:     ledMatrix_AllOff();
  1263     078B  3186  262F  3187   	fcall	_ledMatrix_AllOff
  1264     078E                     l933:
  1265                           
  1266                           ;program.c: 79:     LATAbits.LATA0 = (_Bool)(ledWord & 0b100000000);
  1267     078E  1877               	btfsc	ledMatrix_SetDisplay@ledWord+1,0
  1268     078F  2F91               	goto	u461
  1269     0790  2F94               	goto	u460
  1270     0791                     u461:
  1271     0791  0022               	movlb	2	; select bank2
  1272     0792  140C               	bsf	12,0	;volatile
  1273     0793  2F96               	goto	u474
  1274     0794                     u460:
  1275     0794  0022               	movlb	2	; select bank2
  1276     0795  100C               	bcf	12,0	;volatile
  1277     0796                     u474:
  1278     0796                     l935:
  1279                           
  1280                           ;program.c: 80:     LATAbits.LATA1 = (_Bool)(ledWord & 0b010000000);
  1281     0796  1BF6               	btfsc	ledMatrix_SetDisplay@ledWord,7
  1282     0797  2F99               	goto	u481
  1283     0798  2F9C               	goto	u480
  1284     0799                     u481:
  1285     0799  0022               	movlb	2	; select bank2
  1286     079A  148C               	bsf	12,1	;volatile
  1287     079B  2F9E               	goto	u494
  1288     079C                     u480:
  1289     079C  0022               	movlb	2	; select bank2
  1290     079D  108C               	bcf	12,1	;volatile
  1291     079E                     u494:
  1292     079E                     l937:
  1293                           
  1294                           ;program.c: 81:     LATAbits.LATA2 = (_Bool)(ledWord & 0b001000000);
  1295     079E  1B76               	btfsc	ledMatrix_SetDisplay@ledWord,6
  1296     079F  2FA1               	goto	u501
  1297     07A0  2FA4               	goto	u500
  1298     07A1                     u501:
  1299     07A1  0022               	movlb	2	; select bank2
  1300     07A2  150C               	bsf	12,2	;volatile
  1301     07A3  2FA6               	goto	u514
  1302     07A4                     u500:
  1303     07A4  0022               	movlb	2	; select bank2
  1304     07A5  110C               	bcf	12,2	;volatile
  1305     07A6                     u514:
  1306     07A6                     l939:
  1307                           
  1308                           ;program.c: 82:     LATAbits.LATA3 = 0;
  1309     07A6  118C               	bcf	12,3	;volatile
  1310     07A7                     l941:
  1311                           
  1312                           ;program.c: 83:     LATAbits.LATA4 = 1;
  1313     07A7  160C               	bsf	12,4	;volatile
  1314     07A8                     l943:
  1315                           
  1316                           ;program.c: 84:     LATAbits.LATA5 = 1;
  1317     07A8  168C               	bsf	12,5	;volatile
  1318     07A9                     l945:
  1319                           
  1320                           ;program.c: 86:     delay_x24o25us(delay);
  1321     07A9  30C8               	movlw	200
  1322     07AA  00F2               	movwf	delay_x24o25us@delay
  1323     07AB  3000               	movlw	0
  1324     07AC  00F3               	movwf	delay_x24o25us@delay+1
  1325     07AD  3186  2644  3187   	fcall	_delay_x24o25us
  1326     07B0                     l947:
  1327                           
  1328                           ;program.c: 90:     ledMatrix_AllOff();
  1329     07B0  3186  262F  3187   	fcall	_ledMatrix_AllOff
  1330     07B3                     l949:
  1331                           
  1332                           ;program.c: 92:     LATAbits.LATA0 = (_Bool)(ledWord & 0b000100000);
  1333     07B3  1AF6               	btfsc	ledMatrix_SetDisplay@ledWord,5
  1334     07B4  2FB6               	goto	u521
  1335     07B5  2FB9               	goto	u520
  1336     07B6                     u521:
  1337     07B6  0022               	movlb	2	; select bank2
  1338     07B7  140C               	bsf	12,0	;volatile
  1339     07B8  2FBB               	goto	u534
  1340     07B9                     u520:
  1341     07B9  0022               	movlb	2	; select bank2
  1342     07BA  100C               	bcf	12,0	;volatile
  1343     07BB                     u534:
  1344     07BB                     l951:
  1345                           
  1346                           ;program.c: 93:     LATAbits.LATA1 = (_Bool)(ledWord & 0b000010000);
  1347     07BB  1A76               	btfsc	ledMatrix_SetDisplay@ledWord,4
  1348     07BC  2FBE               	goto	u541
  1349     07BD  2FC1               	goto	u540
  1350     07BE                     u541:
  1351     07BE  0022               	movlb	2	; select bank2
  1352     07BF  148C               	bsf	12,1	;volatile
  1353     07C0  2FC3               	goto	u554
  1354     07C1                     u540:
  1355     07C1  0022               	movlb	2	; select bank2
  1356     07C2  108C               	bcf	12,1	;volatile
  1357     07C3                     u554:
  1358     07C3                     l953:
  1359                           
  1360                           ;program.c: 94:     LATAbits.LATA2 = (_Bool)(ledWord & 0b000001000);
  1361     07C3  19F6               	btfsc	ledMatrix_SetDisplay@ledWord,3
  1362     07C4  2FC6               	goto	u561
  1363     07C5  2FC9               	goto	u560
  1364     07C6                     u561:
  1365     07C6  0022               	movlb	2	; select bank2
  1366     07C7  150C               	bsf	12,2	;volatile
  1367     07C8  2FCB               	goto	u574
  1368     07C9                     u560:
  1369     07C9  0022               	movlb	2	; select bank2
  1370     07CA  110C               	bcf	12,2	;volatile
  1371     07CB                     u574:
  1372     07CB                     l955:
  1373                           
  1374                           ;program.c: 95:     LATAbits.LATA3 = 1;
  1375     07CB  158C               	bsf	12,3	;volatile
  1376     07CC                     l957:
  1377                           
  1378                           ;program.c: 96:     LATAbits.LATA4 = 0;
  1379     07CC  120C               	bcf	12,4	;volatile
  1380     07CD                     l959:
  1381                           
  1382                           ;program.c: 97:     LATAbits.LATA5 = 1;
  1383     07CD  168C               	bsf	12,5	;volatile
  1384                           
  1385                           ;program.c: 99:     delay_x24o25us(delay);
  1386     07CE  30C8               	movlw	200
  1387     07CF  00F2               	movwf	delay_x24o25us@delay
  1388     07D0  3000               	movlw	0
  1389     07D1  00F3               	movwf	delay_x24o25us@delay+1
  1390     07D2  3186  2644  3187   	fcall	_delay_x24o25us
  1391     07D5                     l961:
  1392                           
  1393                           ;program.c: 103:     ledMatrix_AllOff();
  1394     07D5  3186  262F  3187   	fcall	_ledMatrix_AllOff
  1395     07D8                     l963:
  1396                           
  1397                           ;program.c: 105:     LATAbits.LATA0 = (_Bool)(ledWord & 0b000000100);
  1398     07D8  1976               	btfsc	ledMatrix_SetDisplay@ledWord,2
  1399     07D9  2FDB               	goto	u581
  1400     07DA  2FDE               	goto	u580
  1401     07DB                     u581:
  1402     07DB  0022               	movlb	2	; select bank2
  1403     07DC  140C               	bsf	12,0	;volatile
  1404     07DD  2FE0               	goto	u594
  1405     07DE                     u580:
  1406     07DE  0022               	movlb	2	; select bank2
  1407     07DF  100C               	bcf	12,0	;volatile
  1408     07E0                     u594:
  1409     07E0                     l965:
  1410                           
  1411                           ;program.c: 106:     LATAbits.LATA1 = (_Bool)(ledWord & 0b000000010);
  1412     07E0  18F6               	btfsc	ledMatrix_SetDisplay@ledWord,1
  1413     07E1  2FE3               	goto	u601
  1414     07E2  2FE6               	goto	u600
  1415     07E3                     u601:
  1416     07E3  0022               	movlb	2	; select bank2
  1417     07E4  148C               	bsf	12,1	;volatile
  1418     07E5  2FE8               	goto	u614
  1419     07E6                     u600:
  1420     07E6  0022               	movlb	2	; select bank2
  1421     07E7  108C               	bcf	12,1	;volatile
  1422     07E8                     u614:
  1423     07E8                     l967:
  1424                           
  1425                           ;program.c: 107:     LATAbits.LATA2 = (_Bool)(ledWord & 0b000000001);
  1426     07E8  1876               	btfsc	ledMatrix_SetDisplay@ledWord,0
  1427     07E9  2FEB               	goto	u621
  1428     07EA  2FEE               	goto	u620
  1429     07EB                     u621:
  1430     07EB  0022               	movlb	2	; select bank2
  1431     07EC  150C               	bsf	12,2	;volatile
  1432     07ED  2FF0               	goto	u634
  1433     07EE                     u620:
  1434     07EE  0022               	movlb	2	; select bank2
  1435     07EF  110C               	bcf	12,2	;volatile
  1436     07F0                     u634:
  1437     07F0                     l969:
  1438                           
  1439                           ;program.c: 108:     LATAbits.LATA3 = 1;
  1440     07F0  158C               	bsf	12,3	;volatile
  1441     07F1                     l971:
  1442                           
  1443                           ;program.c: 109:     LATAbits.LATA4 = 1;
  1444     07F1  160C               	bsf	12,4	;volatile
  1445     07F2                     l973:
  1446                           
  1447                           ;program.c: 110:     LATAbits.LATA5 = 0;
  1448     07F2  128C               	bcf	12,5	;volatile
  1449     07F3                     l975:
  1450                           
  1451                           ;program.c: 112:     delay_x24o25us(delay);
  1452     07F3  30C8               	movlw	200
  1453     07F4  00F2               	movwf	delay_x24o25us@delay
  1454     07F5  3000               	movlw	0
  1455     07F6  00F3               	movwf	delay_x24o25us@delay+1
  1456     07F7  3186  2644  3187   	fcall	_delay_x24o25us
  1457     07FA                     l83:
  1458     07FA  0008               	return
  1459     07FB                     __end_of_ledMatrix_SetDisplay:
  1460                           
  1461                           	psect	text4
  1462     062F                     __ptext4:	
  1463 ;; *************** function _ledMatrix_AllOff *****************
  1464 ;; Defined at:
  1465 ;;		line 63 in file "program.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;		None
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;		None
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		None
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1479 ;;      Params:         0       0       0       0       0       0       0       0
  1480 ;;      Locals:         0       0       0       0       0       0       0       0
  1481 ;;      Temps:          0       0       0       0       0       0       0       0
  1482 ;;      Totals:         0       0       0       0       0       0       0       0
  1483 ;;Total ram usage:        0 bytes
  1484 ;; Hardware stack levels used: 1
  1485 ;; This function calls:
  1486 ;;		Nothing
  1487 ;; This function is called by:
  1488 ;;		_ledMatrix_SetDisplay
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492     062F                     _ledMatrix_AllOff:	
  1493                           ;psect for function _ledMatrix_AllOff
  1494                           
  1495     062F                     l879:	
  1496                           ;incstack = 0
  1497                           ; Regs used in _ledMatrix_AllOff: []
  1498                           
  1499                           
  1500                           ;program.c: 64:     LATAbits.LATA0 = 0;
  1501     062F  0022               	movlb	2	; select bank2
  1502     0630  100C               	bcf	12,0	;volatile
  1503                           
  1504                           ;program.c: 65:     LATAbits.LATA1 = 0;
  1505     0631  108C               	bcf	12,1	;volatile
  1506                           
  1507                           ;program.c: 66:     LATAbits.LATA2 = 0;
  1508     0632  110C               	bcf	12,2	;volatile
  1509                           
  1510                           ;program.c: 67:     LATAbits.LATA3 = 0;
  1511     0633  118C               	bcf	12,3	;volatile
  1512                           
  1513                           ;program.c: 68:     LATAbits.LATA4 = 0;
  1514     0634  120C               	bcf	12,4	;volatile
  1515                           
  1516                           ;program.c: 69:     LATAbits.LATA5 = 0;
  1517     0635  128C               	bcf	12,5	;volatile
  1518     0636                     l80:
  1519     0636  0008               	return
  1520     0637                     __end_of_ledMatrix_AllOff:
  1521                           
  1522                           	psect	text5
  1523     068A                     __ptext5:	
  1524 ;; *************** function _programInitialize *****************
  1525 ;; Defined at:
  1526 ;;		line 23 in file "program.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, status,2, status,0, pclath, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1540 ;;      Params:         0       0       0       0       0       0       0       0
  1541 ;;      Locals:         0       0       0       0       0       0       0       0
  1542 ;;      Temps:          0       0       0       0       0       0       0       0
  1543 ;;      Totals:         0       0       0       0       0       0       0       0
  1544 ;;Total ram usage:        0 bytes
  1545 ;; Hardware stack levels used: 1
  1546 ;; Hardware stack levels required when called: 2
  1547 ;; This function calls:
  1548 ;;		_spi_Initialize
  1549 ;; This function is called by:
  1550 ;;		_main
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554     068A                     _programInitialize:	
  1555                           ;psect for function _programInitialize
  1556                           
  1557     068A                     l985:	
  1558                           ;incstack = 0
  1559                           ; Regs used in _programInitialize: [wreg+status,2+status,0+pclath+cstack]
  1560                           
  1561                           
  1562                           ;program.c: 24:     TRISA = 0;
  1563     068A  0021               	movlb	1	; select bank1
  1564     068B  018C               	clrf	12	;volatile
  1565                           
  1566                           ;program.c: 25:     ANSELA = 0;
  1567     068C  0023               	movlb	3	; select bank3
  1568     068D  018C               	clrf	12	;volatile
  1569                           
  1570                           ;program.c: 26:     LATA = 0;
  1571     068E  0022               	movlb	2	; select bank2
  1572     068F  018C               	clrf	12	;volatile
  1573     0690                     l987:
  1574                           
  1575                           ;program.c: 29:     TRISCbits.TRISC3 = 0;
  1576     0690  0021               	movlb	1	; select bank1
  1577     0691  118E               	bcf	14,3	;volatile
  1578     0692                     l989:
  1579                           
  1580                           ;program.c: 30:     APFCONbits.SCKSEL = 0;
  1581     0692  0022               	movlb	2	; select bank2
  1582     0693  121D               	bcf	29,4	;volatile
  1583     0694                     l991:
  1584                           
  1585                           ;program.c: 33:     TRISCbits.TRISC4 = 1;
  1586     0694  0021               	movlb	1	; select bank1
  1587     0695  160E               	bsf	14,4	;volatile
  1588     0696                     l993:
  1589                           
  1590                           ;program.c: 34:     APFCONbits.SDISEL = 0;
  1591     0696  0022               	movlb	2	; select bank2
  1592     0697  119D               	bcf	29,3	;volatile
  1593     0698                     l995:
  1594                           
  1595                           ;program.c: 37:     TRISCbits.TRISC5 = 0;
  1596     0698  0021               	movlb	1	; select bank1
  1597     0699  128E               	bcf	14,5	;volatile
  1598     069A                     l997:
  1599                           
  1600                           ;program.c: 38:     APFCONbits.SDOSEL = 0;
  1601     069A  0022               	movlb	2	; select bank2
  1602     069B  129D               	bcf	29,5	;volatile
  1603     069C                     l999:
  1604                           
  1605                           ;program.c: 41:     TRISCbits.TRISC2 = 0;
  1606     069C  0021               	movlb	1	; select bank1
  1607     069D  110E               	bcf	14,2	;volatile
  1608     069E                     l1001:
  1609                           
  1610                           ;program.c: 42:     LATCbits.LATC2 = 1;
  1611     069E  0022               	movlb	2	; select bank2
  1612     069F  150E               	bsf	14,2	;volatile
  1613     06A0                     l1003:
  1614                           
  1615                           ;program.c: 44:     spi_Initialize(32000000, 1000);
  1616     06A0  3001               	movlw	1
  1617     06A1  0020               	movlb	0	; select bank0
  1618     06A2  00A3               	movwf	spi_Initialize@fosc+3
  1619     06A3  30E8               	movlw	232
  1620     06A4  00A2               	movwf	spi_Initialize@fosc+2
  1621     06A5  3048               	movlw	72
  1622     06A6  00A1               	movwf	spi_Initialize@fosc+1
  1623     06A7  3000               	movlw	0
  1624     06A8  00A0               	movwf	spi_Initialize@fosc
  1625     06A9  30E8               	movlw	232
  1626     06AA  00A4               	movwf	spi_Initialize@baudrate
  1627     06AB  3003               	movlw	3
  1628     06AC  00A5               	movwf	spi_Initialize@baudrate+1
  1629     06AD  3187  2701  3186   	fcall	_spi_Initialize
  1630     06B0                     l71:
  1631     06B0  0008               	return
  1632     06B1                     __end_of_programInitialize:
  1633                           
  1634                           	psect	text6
  1635     0701                     __ptext6:	
  1636 ;; *************** function _spi_Initialize *****************
  1637 ;; Defined at:
  1638 ;;		line 115 in file "program.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  fosc            4    0[BANK0 ] unsigned long 
  1641 ;;  baudrate        2    4[BANK0 ] unsigned short 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;		None
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0, pclath, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1653 ;;      Params:         0       6       0       0       0       0       0       0
  1654 ;;      Locals:         0       0       0       0       0       0       0       0
  1655 ;;      Temps:          0       4       0       0       0       0       0       0
  1656 ;;      Totals:         0      10       0       0       0       0       0       0
  1657 ;;Total ram usage:       10 bytes
  1658 ;; Hardware stack levels used: 1
  1659 ;; Hardware stack levels required when called: 1
  1660 ;; This function calls:
  1661 ;;		___lldiv
  1662 ;;		_delay_x1o5us
  1663 ;; This function is called by:
  1664 ;;		_programInitialize
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668     0701                     _spi_Initialize:	
  1669                           ;psect for function _spi_Initialize
  1670                           
  1671     0701                     l905:	
  1672                           ;incstack = 0
  1673                           ; Regs used in _spi_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1674                           
  1675                           
  1676                           ;program.c: 116:     SSPSTATbits.SMP = 1;
  1677     0701  0024               	movlb	4	; select bank4
  1678     0702  1794               	bsf	20,7	;volatile
  1679     0703                     l907:
  1680                           
  1681                           ;program.c: 118:     SSPCON1bits.SSPM = 10;
  1682     0703  0815               	movf	21,w	;volatile
  1683     0704  39F0               	andlw	-16
  1684     0705  380A               	iorlw	10
  1685     0706  0095               	movwf	21	;volatile
  1686     0707                     l909:
  1687                           
  1688                           ;program.c: 120:     SSPADD = (uint8_t)((fosc/baudrate) / 4 - 1);
  1689     0707  0020               	movlb	0	; select bank0
  1690     0708  0824               	movf	spi_Initialize@baudrate,w
  1691     0709  00F0               	movwf	___lldiv@divisor
  1692     070A  0825               	movf	spi_Initialize@baudrate+1,w
  1693     070B  00F1               	movwf	___lldiv@divisor+1
  1694     070C  01F2               	clrf	___lldiv@divisor+2
  1695     070D  01F3               	clrf	___lldiv@divisor+3
  1696     070E  0823               	movf	spi_Initialize@fosc+3,w
  1697     070F  00F7               	movwf	___lldiv@dividend+3
  1698     0710  0822               	movf	spi_Initialize@fosc+2,w
  1699     0711  00F6               	movwf	___lldiv@dividend+2
  1700     0712  0821               	movf	spi_Initialize@fosc+1,w
  1701     0713  00F5               	movwf	___lldiv@dividend+1
  1702     0714  0820               	movf	spi_Initialize@fosc,w
  1703     0715  00F4               	movwf	___lldiv@dividend
  1704     0716  3187  2733  3187   	fcall	___lldiv
  1705     0719  0870               	movf	?___lldiv,w
  1706     071A  0020               	movlb	0	; select bank0
  1707     071B  00A6               	movwf	??_spi_Initialize
  1708     071C  0871               	movf	?___lldiv+1,w
  1709     071D  00A7               	movwf	??_spi_Initialize+1
  1710     071E  0872               	movf	?___lldiv+2,w
  1711     071F  00A8               	movwf	??_spi_Initialize+2
  1712     0720  0873               	movf	?___lldiv+3,w
  1713     0721  00A9               	movwf	??_spi_Initialize+3
  1714     0722  3002               	movlw	2
  1715     0723                     u435:
  1716     0723  36A9               	lsrf	??_spi_Initialize+3,f
  1717     0724  0CA8               	rrf	??_spi_Initialize+2,f
  1718     0725  0CA7               	rrf	??_spi_Initialize+1,f
  1719     0726  0CA6               	rrf	??_spi_Initialize,f
  1720     0727                     u430:
  1721     0727  0B89               	decfsz	9,f
  1722     0728  2F23               	goto	u435
  1723     0729  0826               	movf	??_spi_Initialize,w
  1724     072A  3EFF               	addlw	255
  1725     072B  0024               	movlb	4	; select bank4
  1726     072C  0092               	movwf	18	;volatile
  1727     072D                     l911:
  1728                           
  1729                           ;program.c: 122:     SSPCON1bits.SSPEN = 1;
  1730     072D  1695               	bsf	21,5	;volatile
  1731     072E                     l913:
  1732                           
  1733                           ;program.c: 124:     delay_x1o5us(2);
  1734     072E  3002               	movlw	2
  1735     072F  3186  2637  3187   	fcall	_delay_x1o5us
  1736     0732                     l86:
  1737     0732  0008               	return
  1738     0733                     __end_of_spi_Initialize:
  1739                           
  1740                           	psect	text7
  1741     0733                     __ptext7:	
  1742 ;; *************** function ___lldiv *****************
  1743 ;; Defined at:
  1744 ;;		line 5 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/__lldiv.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  divisor         4    0[COMMON] unsigned long 
  1747 ;;  dividend        4    4[COMMON] unsigned long 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  quotient        4    8[COMMON] unsigned long 
  1750 ;;  counter         1   12[COMMON] unsigned char 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  4    0[COMMON] unsigned long 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1760 ;;      Params:         8       0       0       0       0       0       0       0
  1761 ;;      Locals:         5       0       0       0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0       0
  1763 ;;      Totals:        13       0       0       0       0       0       0       0
  1764 ;;Total ram usage:       13 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_spi_Initialize
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773     0733                     ___lldiv:	
  1774                           ;psect for function ___lldiv
  1775                           
  1776     0733                     l881:	
  1777                           ;incstack = 0
  1778                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1779                           
  1780     0733  3000               	movlw	0
  1781     0734  00FB               	movwf	___lldiv@quotient+3
  1782     0735  3000               	movlw	0
  1783     0736  00FA               	movwf	___lldiv@quotient+2
  1784     0737  3000               	movlw	0
  1785     0738  00F9               	movwf	___lldiv@quotient+1
  1786     0739  3000               	movlw	0
  1787     073A  00F8               	movwf	___lldiv@quotient
  1788     073B  0873               	movf	___lldiv@divisor+3,w
  1789     073C  0472               	iorwf	___lldiv@divisor+2,w
  1790     073D  0471               	iorwf	___lldiv@divisor+1,w
  1791     073E  0470               	iorwf	___lldiv@divisor,w
  1792     073F  1903               	skipnz
  1793     0740  2F42               	goto	u361
  1794     0741  2F43               	goto	u360
  1795     0742                     u361:
  1796     0742  2F82               	goto	l901
  1797     0743                     u360:
  1798     0743                     l883:
  1799     0743  3001               	movlw	1
  1800     0744  00FC               	movwf	___lldiv@counter
  1801     0745  2F4F               	goto	l887
  1802     0746                     l885:
  1803     0746  3001               	movlw	1
  1804     0747                     u375:
  1805     0747  35F0               	lslf	___lldiv@divisor,f
  1806     0748  0DF1               	rlf	___lldiv@divisor+1,f
  1807     0749  0DF2               	rlf	___lldiv@divisor+2,f
  1808     074A  0DF3               	rlf	___lldiv@divisor+3,f
  1809     074B  0B89               	decfsz	9,f
  1810     074C  2F47               	goto	u375
  1811     074D  3001               	movlw	1
  1812     074E  07FC               	addwf	___lldiv@counter,f
  1813     074F                     l887:
  1814     074F  1FF3               	btfss	___lldiv@divisor+3,7
  1815     0750  2F52               	goto	u381
  1816     0751  2F53               	goto	u380
  1817     0752                     u381:
  1818     0752  2F46               	goto	l885
  1819     0753                     u380:
  1820     0753                     l889:
  1821     0753  3001               	movlw	1
  1822     0754                     u395:
  1823     0754  35F8               	lslf	___lldiv@quotient,f
  1824     0755  0DF9               	rlf	___lldiv@quotient+1,f
  1825     0756  0DFA               	rlf	___lldiv@quotient+2,f
  1826     0757  0DFB               	rlf	___lldiv@quotient+3,f
  1827     0758  0B89               	decfsz	9,f
  1828     0759  2F54               	goto	u395
  1829     075A                     l891:
  1830     075A  0873               	movf	___lldiv@divisor+3,w
  1831     075B  0277               	subwf	___lldiv@dividend+3,w
  1832     075C  1D03               	skipz
  1833     075D  2F68               	goto	u405
  1834     075E  0872               	movf	___lldiv@divisor+2,w
  1835     075F  0276               	subwf	___lldiv@dividend+2,w
  1836     0760  1D03               	skipz
  1837     0761  2F68               	goto	u405
  1838     0762  0871               	movf	___lldiv@divisor+1,w
  1839     0763  0275               	subwf	___lldiv@dividend+1,w
  1840     0764  1D03               	skipz
  1841     0765  2F68               	goto	u405
  1842     0766  0870               	movf	___lldiv@divisor,w
  1843     0767  0274               	subwf	___lldiv@dividend,w
  1844     0768                     u405:
  1845     0768  1C03               	skipc
  1846     0769  2F6B               	goto	u401
  1847     076A  2F6C               	goto	u400
  1848     076B                     u401:
  1849     076B  2F75               	goto	l897
  1850     076C                     u400:
  1851     076C                     l893:
  1852     076C  0870               	movf	___lldiv@divisor,w
  1853     076D  02F4               	subwf	___lldiv@dividend,f
  1854     076E  0871               	movf	___lldiv@divisor+1,w
  1855     076F  3BF5               	subwfb	___lldiv@dividend+1,f
  1856     0770  0872               	movf	___lldiv@divisor+2,w
  1857     0771  3BF6               	subwfb	___lldiv@dividend+2,f
  1858     0772  0873               	movf	___lldiv@divisor+3,w
  1859     0773  3BF7               	subwfb	___lldiv@dividend+3,f
  1860     0774                     l895:
  1861     0774  1478               	bsf	___lldiv@quotient,0
  1862     0775                     l897:
  1863     0775  3001               	movlw	1
  1864     0776                     u415:
  1865     0776  36F3               	lsrf	___lldiv@divisor+3,f
  1866     0777  0CF2               	rrf	___lldiv@divisor+2,f
  1867     0778  0CF1               	rrf	___lldiv@divisor+1,f
  1868     0779  0CF0               	rrf	___lldiv@divisor,f
  1869     077A  0B89               	decfsz	9,f
  1870     077B  2F76               	goto	u415
  1871     077C                     l899:
  1872     077C  3001               	movlw	1
  1873     077D  02FC               	subwf	___lldiv@counter,f
  1874     077E  1D03               	btfss	3,2
  1875     077F  2F81               	goto	u421
  1876     0780  2F82               	goto	u420
  1877     0781                     u421:
  1878     0781  2F53               	goto	l889
  1879     0782                     u420:
  1880     0782                     l901:
  1881     0782  087B               	movf	___lldiv@quotient+3,w
  1882     0783  00F3               	movwf	?___lldiv+3
  1883     0784  087A               	movf	___lldiv@quotient+2,w
  1884     0785  00F2               	movwf	?___lldiv+2
  1885     0786  0879               	movf	___lldiv@quotient+1,w
  1886     0787  00F1               	movwf	?___lldiv+1
  1887     0788  0878               	movf	___lldiv@quotient,w
  1888     0789  00F0               	movwf	?___lldiv
  1889     078A                     l281:
  1890     078A  0008               	return
  1891     078B                     __end_of___lldiv:
  1892                           
  1893                           	psect	text8
  1894     06D8                     __ptext8:	
  1895 ;; *************** function _delay_ms *****************
  1896 ;; Defined at:
  1897 ;;		line 15 in file "program.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  delay           4    6[COMMON] unsigned long 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  i               4   10[COMMON] unsigned long 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, status,2, status,0, pclath, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1911 ;;      Params:         4       0       0       0       0       0       0       0
  1912 ;;      Locals:         4       0       0       0       0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0       0       0       0
  1914 ;;      Totals:         8       0       0       0       0       0       0       0
  1915 ;;Total ram usage:        8 bytes
  1916 ;; Hardware stack levels used: 1
  1917 ;; Hardware stack levels required when called: 2
  1918 ;; This function calls:
  1919 ;;		_delay_x24o25us
  1920 ;; This function is called by:
  1921 ;;		_main
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925     06D8                     _delay_ms:	
  1926                           ;psect for function _delay_ms
  1927                           
  1928     06D8                     l977:	
  1929                           ;incstack = 0
  1930                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
  1931                           
  1932                           
  1933                           ;program.c: 16:     for(uint32_t i=0; i<delay; i++) delay_x24o25us(41);
  1934     06D8  3000               	movlw	0
  1935     06D9  00FD               	movwf	delay_ms@i+3
  1936     06DA  3000               	movlw	0
  1937     06DB  00FC               	movwf	delay_ms@i+2
  1938     06DC  3000               	movlw	0
  1939     06DD  00FB               	movwf	delay_ms@i+1
  1940     06DE  3000               	movlw	0
  1941     06DF  00FA               	movwf	delay_ms@i
  1942     06E0  2EEE               	goto	l983
  1943     06E1                     l979:
  1944     06E1  3029               	movlw	41
  1945     06E2  00F2               	movwf	delay_x24o25us@delay
  1946     06E3  3000               	movlw	0
  1947     06E4  00F3               	movwf	delay_x24o25us@delay+1
  1948     06E5  3186  2644  3186   	fcall	_delay_x24o25us
  1949     06E8                     l981:
  1950     06E8  3001               	movlw	1
  1951     06E9  07FA               	addwf	delay_ms@i,f
  1952     06EA  3000               	movlw	0
  1953     06EB  3DFB               	addwfc	delay_ms@i+1,f
  1954     06EC  3DFC               	addwfc	delay_ms@i+2,f
  1955     06ED  3DFD               	addwfc	delay_ms@i+3,f
  1956     06EE                     l983:
  1957     06EE  0879               	movf	delay_ms@delay+3,w
  1958     06EF  027D               	subwf	delay_ms@i+3,w
  1959     06F0  1D03               	skipz
  1960     06F1  2EFC               	goto	u645
  1961     06F2  0878               	movf	delay_ms@delay+2,w
  1962     06F3  027C               	subwf	delay_ms@i+2,w
  1963     06F4  1D03               	skipz
  1964     06F5  2EFC               	goto	u645
  1965     06F6  0877               	movf	delay_ms@delay+1,w
  1966     06F7  027B               	subwf	delay_ms@i+1,w
  1967     06F8  1D03               	skipz
  1968     06F9  2EFC               	goto	u645
  1969     06FA  0876               	movf	delay_ms@delay,w
  1970     06FB  027A               	subwf	delay_ms@i,w
  1971     06FC                     u645:
  1972     06FC  1C03               	skipc
  1973     06FD  2EFF               	goto	u641
  1974     06FE  2F00               	goto	u640
  1975     06FF                     u641:
  1976     06FF  2EE1               	goto	l979
  1977     0700                     u640:
  1978     0700                     l66:
  1979     0700  0008               	return
  1980     0701                     __end_of_delay_ms:
  1981                           
  1982                           	psect	text9
  1983     0644                     __ptext9:	
  1984 ;; *************** function _delay_x24o25us *****************
  1985 ;; Defined at:
  1986 ;;		line 10 in file "program.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  delay           2    2[COMMON] unsigned short 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  i               2    4[COMMON] unsigned short 
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0, pclath, cstack
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2000 ;;      Params:         2       0       0       0       0       0       0       0
  2001 ;;      Locals:         2       0       0       0       0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0       0       0       0
  2003 ;;      Totals:         4       0       0       0       0       0       0       0
  2004 ;;Total ram usage:        4 bytes
  2005 ;; Hardware stack levels used: 1
  2006 ;; Hardware stack levels required when called: 1
  2007 ;; This function calls:
  2008 ;;		_delay_x1o5us
  2009 ;; This function is called by:
  2010 ;;		_delay_ms
  2011 ;;		_ledMatrix_SetDisplay
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015     0644                     _delay_x24o25us:	
  2016                           ;psect for function _delay_x24o25us
  2017                           
  2018     0644                     l871:	
  2019                           ;incstack = 0
  2020                           ; Regs used in _delay_x24o25us: [wreg+status,2+status,0+pclath+cstack]
  2021                           
  2022                           
  2023                           ;program.c: 11:     for(uint16_t i=0; i<delay; i++) delay_x1o5us(15);
  2024     0644  01F4               	clrf	delay_x24o25us@i
  2025     0645  01F5               	clrf	delay_x24o25us@i+1
  2026     0646  2E4F               	goto	l877
  2027     0647                     l873:
  2028     0647  300F               	movlw	15
  2029     0648  3186  2637  3186   	fcall	_delay_x1o5us
  2030     064B                     l875:
  2031     064B  3001               	movlw	1
  2032     064C  07F4               	addwf	delay_x24o25us@i,f
  2033     064D  3000               	movlw	0
  2034     064E  3DF5               	addwfc	delay_x24o25us@i+1,f
  2035     064F                     l877:
  2036     064F  0873               	movf	delay_x24o25us@delay+1,w
  2037     0650  0275               	subwf	delay_x24o25us@i+1,w
  2038     0651  1D03               	skipz
  2039     0652  2E55               	goto	u355
  2040     0653  0872               	movf	delay_x24o25us@delay,w
  2041     0654  0274               	subwf	delay_x24o25us@i,w
  2042     0655                     u355:
  2043     0655  1C03               	skipc
  2044     0656  2E58               	goto	u351
  2045     0657  2E59               	goto	u350
  2046     0658                     u351:
  2047     0658  2E47               	goto	l873
  2048     0659                     u350:
  2049     0659                     l60:
  2050     0659  0008               	return
  2051     065A                     __end_of_delay_x24o25us:
  2052                           
  2053                           	psect	text10
  2054     0637                     __ptext10:	
  2055 ;; *************** function _delay_x1o5us *****************
  2056 ;; Defined at:
  2057 ;;		line 5 in file "program.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  delay           1    wreg     unsigned char 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  delay           1    0[COMMON] unsigned char 
  2062 ;;  i               1    1[COMMON] unsigned char 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg, status,2, status,0
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2072 ;;      Params:         0       0       0       0       0       0       0       0
  2073 ;;      Locals:         2       0       0       0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0       0       0       0
  2075 ;;      Totals:         2       0       0       0       0       0       0       0
  2076 ;;Total ram usage:        2 bytes
  2077 ;; Hardware stack levels used: 1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;;		_delay_x24o25us
  2083 ;;		_spi_Initialize
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087     0637                     _delay_x1o5us:	
  2088                           ;psect for function _delay_x1o5us
  2089                           
  2090                           
  2091                           ;incstack = 0
  2092                           ; Regs used in _delay_x1o5us: [wreg+status,2+status,0]
  2093                           ;delay_x1o5us@delay stored from wreg
  2094     0637  00F0               	movwf	delay_x1o5us@delay
  2095     0638                     l865:
  2096                           
  2097                           ;program.c: 6:     for(uint8_t i=0; i<delay; i++) __nop();
  2098     0638  01F1               	clrf	delay_x1o5us@i
  2099     0639  2E3D               	goto	l869
  2100     063A                     l52:
  2101     063A  0000               	nop
  2102     063B                     l867:
  2103     063B  3001               	movlw	1
  2104     063C  07F1               	addwf	delay_x1o5us@i,f
  2105     063D                     l869:
  2106     063D  0870               	movf	delay_x1o5us@delay,w
  2107     063E  0271               	subwf	delay_x1o5us@i,w
  2108     063F  1C03               	skipc
  2109     0640  2E42               	goto	u341
  2110     0641  2E43               	goto	u340
  2111     0642                     u341:
  2112     0642  2E3A               	goto	l52
  2113     0643                     u340:
  2114     0643                     l54:
  2115     0643  0008               	return
  2116     0644                     __end_of_delay_x1o5us:
  2117     0001                     ___latbits      equ	1
  2118     007E                     btemp           set	126	;btemp
  2119     007E                     wtemp0          set	126
  2120                           
  2121                           	psect	config
  2122                           
  2123                           ;Config register CONFIG1 @ 0x8007
  2124                           ;	Oscillator Selection
  2125                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  2126                           ;	Watchdog Timer Enable
  2127                           ;	WDTE = OFF, WDT disabled
  2128                           ;	Power-up Timer Enable
  2129                           ;	PWRTE = OFF, PWRT disabled
  2130                           ;	MCLR Pin Function Select
  2131                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2132                           ;	Flash Program Memory Code Protection
  2133                           ;	CP = OFF, Program memory code protection is disabled
  2134                           ;	Data Memory Code Protection
  2135                           ;	CPD = OFF, Data memory code protection is disabled
  2136                           ;	Brown-out Reset Enable
  2137                           ;	BOREN = OFF, Brown-out Reset disabled
  2138                           ;	Clock Out Enable
  2139                           ;	CLKOUTEN = ON, CLKOUT function is enabled on the CLKOUT pin
  2140                           ;	Internal/External Switchover
  2141                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2142                           ;	Fail-Safe Clock Monitor Enable
  2143                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2144     8007                     	org	32775
  2145     8007  01E2               	dw	482
  2146                           
  2147                           ;Config register CONFIG2 @ 0x8008
  2148                           ;	Flash Memory Self-Write Protection
  2149                           ;	WRT = OFF, Write protection off
  2150                           ;	Voltage Regulator Capacitor Enable bit
  2151                           ;	VCAPEN = OFF, Vcap functionality is disabled on RA6.
  2152                           ;	PLL Enable
  2153                           ;	PLLEN = ON, 4x PLL enabled
  2154                           ;	Stack Overflow/Underflow Reset Enable
  2155                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2156                           ;	Brown-out Reset Voltage Selection
  2157                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2158                           ;	Low Power Brown-Out Reset Enable Bit
  2159                           ;	LPBOR = 0x1, unprogrammed default
  2160                           ;	In-Circuit Debugger Mode
  2161                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  2162                           ;	Low-Voltage Programming Enable
  2163                           ;	LVP = ON, Low-voltage programming enabled
  2164     8008                     	org	32776
  2165     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      11
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delay_ms
    _programLoop->_ledMatrix_SetDisplay
    _ledMatrix_SetDisplay->_delay_x24o25us
    _spi_Initialize->___lldiv
    _delay_ms->_delay_x24o25us
    _delay_x24o25us->_delay_x1o5us

Critical Paths under _main in BANK0

    _programInitialize->_spi_Initialize

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     983
                           _delay_ms
                       _delay_x1o5us
                  _programInitialize
                        _programLoop
 ---------------------------------------------------------------------------------
 (1) _programLoop                                          5     5      0     517
                                              8 COMMON     5     5      0
               _ledMatrix_SetDisplay
             _spi_TransferByteSlave1
 ---------------------------------------------------------------------------------
 (2) _spi_TransferByteSlave1                               2     2      0      53
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ledMatrix_SetDisplay                                 3     1      2     369
                                              6 COMMON     2     0      2
                     _delay_x24o25us
                   _ledMatrix_AllOff
 ---------------------------------------------------------------------------------
 (3) _ledMatrix_AllOff                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _programInitialize                                    0     0      0     263
                     _spi_Initialize
 ---------------------------------------------------------------------------------
 (2) _spi_Initialize                                      10     4      6     263
                                              0 BANK0     10     4      6
                            ___lldiv
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     164
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             8     4      4     150
                                              6 COMMON     8     4      4
                     _delay_x24o25us
 ---------------------------------------------------------------------------------
 (3) _delay_x24o25us                                       4     2      2     103
                                              2 COMMON     4     2      2
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (4) _delay_x1o5us                                         2     2      0      53
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_ms
     _delay_x24o25us
       _delay_x1o5us
   _delay_x1o5us
   _programInitialize
     _spi_Initialize
       ___lldiv
       _delay_x1o5us
   _programLoop
     _ledMatrix_SetDisplay
       _delay_x24o25us
       _ledMatrix_AllOff
     _spi_TransferByteSlave1

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            16      0       0      0.0%
BIGRAM             496      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     10      11     13.8%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               16      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      25      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Nov 22 15:51:51 2024

                   _SSPSTATbits 0214                              l13 0684                              l52 063A  
                            l60 0659                              l54 0643                              l71 06B0  
                            l80 0636                              l66 0700                              l83 07FA  
                            l91 0666                              l92 0667                              l77 06D7  
                            l86 0732                              l95 0671                              l89 0661  
                           l281 078A                             l901 0782                             l911 072D  
                           l913 072E                             l905 0701                             l921 065E  
                           l907 0703                             l931 078B                             l923 066C  
                           l915 065B                             l909 0707                             l941 07A7  
                           l933 078E                             l925 066E                             l917 065D  
                           l871 0644                             l951 07BB                             l943 07A8  
                           l935 0796                             l919 065D                             l865 0638  
                           l873 0647                             l881 0733                             l961 07D5  
                           l953 07C3                             l945 07A9                             l937 079E  
                           l929 078B                             l867 063B                             l875 064B  
                           l891 075A                             l883 0743                             l971 07F1  
                           l963 07D8                             l955 07CB                             l947 07B0  
                           l939 07A6                             l869 063D                             l877 064F  
                           l981 06E8                             l893 076C                             l885 0746  
                           l973 07F2                             l965 07E0                             l957 07CC  
                           l949 07B3                             l983 06EE                             l895 0774  
                           l887 074F                             l991 0694                             l879 062F  
                           l975 07F3                             l967 07E8                             l959 07CD  
                           l977 06D8                             l897 0775                             l889 0753  
                           l993 0696                             l985 068A                             l969 07F0  
                           l979 06E1                             l899 077C                             l995 0698  
                           l987 0690                             l997 069A                             l989 0692  
                           l999 069C                             u400 076C                             u401 076B  
                           u340 0643                             u420 0782                             u500 07A4  
                           u341 0642                             u421 0781                             u405 0768  
                           u501 07A1                             u350 0659                             u430 0727  
                           u351 0658                             u415 0776                             u360 0743  
                           u600 07E6                             u520 07B9                             u440 0666  
                           u361 0742                             u601 07E3                             u521 07B6  
                           u441 0665                             u514 07A6                             u450 066C  
                           u355 0655                             u435 0723                             u451 066B  
                           u380 0753                             u620 07EE                             u540 07C1  
                           u460 0794                             u381 0752                             u621 07EB  
                           u541 07BE                             u461 0791                             u614 07E8  
                           u534 07BB                             u375 0747                             u640 0700  
                           u560 07C9                             u480 079C                             u641 06FF  
                           u561 07C6                             u481 0799                             u634 07F0  
                           u554 07C3                             u474 0796                             u650 06BA  
                           u395 0754                             u651 06B9                             u580 07DE  
                           u660 06D7                             u645 06FC                             u581 07DB  
                           u661 06D6                             u574 07CB                             u494 079E  
                           u594 07E0                             wreg 0009                            l1001 069E  
                          l1003 06A0                            l1011 06B5                            l1021 06CF  
                          l1013 06BA                            l1005 06B1                            l1023 06D1  
                          l1015 06C0                            l1017 06C3                            l1025 0672  
                          l1019 06C5                            _LATA 010C                            _main 0672  
                          btemp 007E                            start 0002           programLoop@dataReturn 007A  
          __end_of_delay_x1o5us 0644    __end_of_ledMatrix_SetDisplay 07FB                           ?_main 0070  
        spi_Initialize@baudrate 0024                 __end_of___lldiv 078B                           _TRISA 008C  
                  programLoop@i 007C             delay_x24o25us@delay 0072                           status 0003  
                         wtemp0 007E                 __initialization 07FB      spi_TransferByteSlave1@data 0070  
             ?_ledMatrix_AllOff 0070                    __end_of_main 068A    spi_TransferByteSlave1@rxData 0071  
            ??_ledMatrix_AllOff 0070                          ??_main 007E                          _ANSELA 018C  
                        _SSPADD 0212                          _SSPBUF 0211         ?_spi_TransferByteSlave1 0070  
              __end_of_delay_ms 0701               delay_x1o5us@delay 0070                       ??___lldiv 0078  
                _delay_x24o25us 0644  __end_of_spi_TransferByteSlave1 0672         __end_of__initialization 07FD  
          _ledMatrix_SetDisplay 078B                    ?_programLoop 0070                  __pcstackCOMMON 0070  
        __end_of_delay_x24o25us 065A                    _delay_x1o5us 0637                      __pbssBANK0 002A  
         ?_ledMatrix_SetDisplay 0076               _programInitialize 068A                      __pmaintext 0672  
            ?_programInitialize 0070                 ?_delay_x24o25us 0072             ??_programInitialize 007D  
                     ?_delay_ms 0076       __end_of_programInitialize 06B1                         ___lldiv 0733  
                       __ptext1 06B1                         __ptext2 065A                         __ptext3 078B  
                       __ptext4 062F                         __ptext5 068A                         __ptext6 0701  
                       __ptext7 0733                         __ptext8 06D8                         __ptext9 0644  
                       _counter 002A                      ??_delay_ms 007A            end_of_initialization 07FD  
            spi_Initialize@fosc 0020          ??_ledMatrix_SetDisplay 0078                 ___lldiv@divisor 0070  
               ___lldiv@counter 007C                       _TRISCbits 008E                   delay_x1o5us@i 0071  
                 delay_ms@delay 0076             start_initialization 07FB                  _spi_Initialize 0701  
              ??_delay_x24o25us 0074                       ___latbits 0001                   __pcstackBANK0 0020  
              _ledMatrix_AllOff 062F          __end_of_spi_Initialize 0733                        ?___lldiv 0070  
      ??_spi_TransferByteSlave1 0070                 ?_spi_Initialize 0020                        _LATAbits 010C  
                      _LATCbits 010E                       delay_ms@i 007A                        _PIR1bits 0011  
   ledMatrix_SetDisplay@ledWord 0076                   ??_programLoop 0078                      _APFCONbits 011D  
                      _delay_ms 06D8                        __ptext10 0637                   ?_delay_x1o5us 0070  
      __end_of_ledMatrix_AllOff 0637             __end_of_programLoop 06D8                  ??_delay_x1o5us 0070  
              ___lldiv@dividend 0074          _spi_TransferByteSlave1 065A                 delay_x24o25us@i 0074  
   programLoop@transferDoneFlag 007B                ___lldiv@quotient 0078                ??_spi_Initialize 0026  
                   _SSPCON1bits 0215                     _programLoop 06B1  
